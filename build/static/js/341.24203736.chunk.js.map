{"version":3,"file":"static/js/341.24203736.chunk.js","mappings":"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","sources":["pages/auth/register.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../context/auth-context.tsx';\nimport { Layout } from '../../components/layout/layout.tsx';\nimport { Container } from '../../components/layout/container.tsx';\nimport { Alert } from '../../components/ui/alert.tsx';\nimport { Spinner } from '../../components/ui/spinner.tsx';\nimport { RegisterFormData } from '../../types';\n\n/**\n * Registration page component\n */\nexport const RegisterPage: React.FC = () => {\n  const navigate = useNavigate();\n  const { register } = useAuth();\n  const [formData, setFormData] = useState<RegisterFormData>({\n    email: '',\n    password: '',\n    displayName: '',\n    confirmPassword: '',\n  });\n  const [error, setError] = useState<string>('');\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  // Handle input change\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  // Validate form\n  const validateForm = (): boolean => {\n    if (formData.password !== formData.confirmPassword) {\n      setError('Passwords do not match');\n      return false;\n    }\n    \n    if (formData.password.length < 8) {\n      setError('Password must be at least 8 characters long');\n      return false;\n    }\n    \n    return true;\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e: React.FormEvent): Promise<void> => {\n    e.preventDefault();\n    setError('');\n    \n    if (!validateForm()) {\n      return;\n    }\n    \n    setIsLoading(true);\n\n    try {\n      await register(formData);\n      navigate('/');\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to register. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Layout>\n      <Container maxWidth=\"sm\" className=\"mt-8\">\n        <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Create your account</h2>\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\n            Or{' '}\n            <Link to=\"/login\" className=\"font-medium text-primary-600 hover:text-primary-500\">\n              sign in to your existing account\n            </Link>\n          </p>\n        </div>\n\n        <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n          <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n            {error && (\n              <Alert type=\"error\" className=\"mb-4\" onClose={() => setError('')}>\n                {error}\n              </Alert>\n            )}\n            \n            <form className=\"space-y-6\" onSubmit={handleSubmit}>\n              <div>\n                <label htmlFor=\"displayName\" className=\"block text-sm font-medium text-gray-700\">\n                  Display Name\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    id=\"displayName\"\n                    name=\"displayName\"\n                    type=\"text\"\n                    autoComplete=\"name\"\n                    required\n                    value={formData.displayName}\n                    onChange={handleChange}\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                  Email address\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    autoComplete=\"email\"\n                    required\n                    value={formData.email}\n                    onChange={handleChange}\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                    placeholder=\"you@example.com\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                  Password\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    autoComplete=\"new-password\"\n                    required\n                    value={formData.password}\n                    onChange={handleChange}\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                  />\n                </div>\n                <p className=\"mt-1 text-xs text-gray-500\">\n                  Password must be at least 8 characters long\n                </p>\n              </div>\n\n              <div>\n                <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n                  Confirm Password\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    id=\"confirmPassword\"\n                    name=\"confirmPassword\"\n                    type=\"password\"\n                    autoComplete=\"new-password\"\n                    required\n                    value={formData.confirmPassword}\n                    onChange={handleChange}\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"flex items-center\">\n                <input\n                  id=\"terms\"\n                  name=\"terms\"\n                  type=\"checkbox\"\n                  required\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\n                />\n                <label htmlFor=\"terms\" className=\"ml-2 block text-sm text-gray-900\">\n                  I agree to the{' '}\n                  <Link to=\"/terms\" className=\"font-medium text-primary-600 hover:text-primary-500\">\n                    Terms of Service\n                  </Link>{' '}\n                  and{' '}\n                  <Link to=\"/privacy\" className=\"font-medium text-primary-600 hover:text-primary-500\">\n                    Privacy Policy\n                  </Link>\n                </label>\n              </div>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  disabled={isLoading}\n                  className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  {isLoading ? <Spinner size=\"sm\" color=\"text-white\" className=\"mr-2\" /> : null}\n                  Create Account\n                </button>\n              </div>\n            </form>\n\n            <div className=\"mt-6\">\n              <div className=\"relative\">\n                <div className=\"absolute inset-0 flex items-center\">\n                  <div className=\"w-full border-t border-gray-300\" />\n                </div>\n                <div className=\"relative flex justify-center text-sm\">\n                  <span className=\"px-2 bg-white text-gray-500\">Or continue with</span>\n                </div>\n              </div>\n\n              <div className=\"mt-6 grid grid-cols-2 gap-3\">\n                <div>\n                  <button\n                    type=\"button\"\n                    className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\n                  >\n                    <span className=\"sr-only\">Sign up with Google</span>\n                    <svg className=\"w-5 h-5\" aria-hidden=\"true\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path d=\"M12.545,10.239v3.821h5.445c-0.712,2.315-2.647,3.972-5.445,3.972c-3.332,0-6.033-2.701-6.033-6.032s2.701-6.032,6.033-6.032c1.498,0,2.866,0.549,3.921,1.453l2.814-2.814C17.503,2.988,15.139,2,12.545,2C7.021,2,2.543,6.477,2.543,12s4.478,10,10.002,10c8.396,0,10.249-7.85,9.426-11.748L12.545,10.239z\" />\n                    </svg>\n                  </button>\n                </div>\n\n                <div>\n                  <button\n                    type=\"button\"\n                    className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\n                  >\n                    <span className=\"sr-only\">Sign up with Facebook</span>\n                    <svg className=\"w-5 h-5\" aria-hidden=\"true\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path\n                        fillRule=\"evenodd\"\n                        d=\"M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.988C18.343 21.128 22 16.991 22 12z\"\n                        clipRule=\"evenodd\"\n                      />\n                    </svg>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Container>\n    </Layout>\n  );\n};\n"],"names":["RegisterPage","navigate","useNavigate","register","useAuth","formData","setFormData","useState","email","password","displayName","confirmPassword","error","setError","isLoading","setIsLoading","handleChange","e","name","value","target","prev","_objectSpread","_jsx","Layout","children","_jsxs","Container","maxWidth","className","Link","to","Alert","type","onClose","onSubmit","async","preventDefault","length","err","Error","message","htmlFor","id","autoComplete","required","onChange","placeholder","disabled","Spinner","size","color","fill","viewBox","d","fillRule","clipRule"],"sourceRoot":""}