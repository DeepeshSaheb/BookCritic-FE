{"version":3,"file":"static/js/312.5f16a716.chunk.js","mappings":"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","sources":["../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.js","pages/profile/settings.tsx","../node_modules/use-sync-external-store/shim/index.js"],"sourcesContent":["/**\n * @license React\n * use-sync-external-store-shim.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useState = React.useState,\n  useEffect = React.useEffect,\n  useLayoutEffect = React.useLayoutEffect,\n  useDebugValue = React.useDebugValue;\nfunction useSyncExternalStore$2(subscribe, getSnapshot) {\n  var value = getSnapshot(),\n    _useState = useState({ inst: { value: value, getSnapshot: getSnapshot } }),\n    inst = _useState[0].inst,\n    forceUpdate = _useState[1];\n  useLayoutEffect(\n    function () {\n      inst.value = value;\n      inst.getSnapshot = getSnapshot;\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n    },\n    [subscribe, value, getSnapshot]\n  );\n  useEffect(\n    function () {\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      return subscribe(function () {\n        checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      });\n    },\n    [subscribe]\n  );\n  useDebugValue(value);\n  return value;\n}\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  inst = inst.value;\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(inst, nextValue);\n  } catch (error) {\n    return !0;\n  }\n}\nfunction useSyncExternalStore$1(subscribe, getSnapshot) {\n  return getSnapshot();\n}\nvar shim =\n  \"undefined\" === typeof window ||\n  \"undefined\" === typeof window.document ||\n  \"undefined\" === typeof window.document.createElement\n    ? useSyncExternalStore$1\n    : useSyncExternalStore$2;\nexports.useSyncExternalStore =\n  void 0 !== React.useSyncExternalStore ? React.useSyncExternalStore : shim;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useMutation } from '@tanstack/react-query';\nimport { Layout } from '../../components/layout/layout.tsx';\nimport { Container } from '../../components/layout/container.tsx';\nimport { Spinner } from '../../components/ui/spinner.tsx';\nimport { Alert } from '../../components/ui/alert.tsx';\nimport { useAuth } from '../../context/auth-context.tsx';\nimport { UserService } from '../../services/user-service.ts';\n\ninterface ProfileFormData {\n  displayName: string;\n  email: string;\n  currentPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n/**\n * User profile settings page component\n */\nexport const ProfileSettingsPage: React.FC = () => {\n  const { user, logout } = useAuth();\n  const navigate = useNavigate();\n  \n  const [formData, setFormData] = useState<ProfileFormData>({\n    displayName: user?.displayName || '',\n    email: user?.email || '',\n    currentPassword: '',\n    newPassword: '',\n    confirmPassword: '',\n  });\n  \n  const [error, setError] = useState<string>('');\n  const [success, setSuccess] = useState<string>('');\n  \n  // Update profile mutation\n  const updateProfileMutation = useMutation(\n    (data: { displayName: string }) => UserService.updateProfile(data),\n    {\n      onSuccess: () => {\n        setSuccess('Profile updated successfully.');\n        setTimeout(() => {\n          setSuccess('');\n        }, 5000);\n      },\n      onError: (err: any) => {\n        setError(err?.message || 'Failed to update profile. Please try again.');\n      },\n    }\n  );\n  \n  // Change password mutation\n  const changePasswordMutation = useMutation(\n    (data: { currentPassword: string; newPassword: string }) => \n      UserService.changePassword(data),\n    {\n      onSuccess: () => {\n        setSuccess('Password changed successfully. Please log in again.');\n        setTimeout(() => {\n          logout();\n          navigate('/login');\n        }, 3000);\n      },\n      onError: (err: any) => {\n        setError(err?.message || 'Failed to change password. Please try again.');\n      },\n    }\n  );\n  \n  // Handle input change\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n  \n  // Validate profile form\n  const validateProfileForm = (): boolean => {\n    if (!formData.displayName.trim()) {\n      setError('Display name is required');\n      return false;\n    }\n    \n    return true;\n  };\n  \n  // Validate password form\n  const validatePasswordForm = (): boolean => {\n    if (!formData.currentPassword) {\n      setError('Current password is required');\n      return false;\n    }\n    \n    if (formData.newPassword.length < 8) {\n      setError('New password must be at least 8 characters long');\n      return false;\n    }\n    \n    if (formData.newPassword !== formData.confirmPassword) {\n      setError('New passwords do not match');\n      return false;\n    }\n    \n    return true;\n  };\n  \n  // Handle profile form submission\n  const handleProfileSubmit = (e: React.FormEvent): void => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    \n    if (validateProfileForm()) {\n      updateProfileMutation.mutate({\n        displayName: formData.displayName,\n      });\n    }\n  };\n  \n  // Handle password form submission\n  const handlePasswordSubmit = (e: React.FormEvent): void => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    \n    if (validatePasswordForm()) {\n      changePasswordMutation.mutate({\n        currentPassword: formData.currentPassword,\n        newPassword: formData.newPassword,\n      });\n    }\n  };\n  \n  if (!user) {\n    return (\n      <Layout>\n        <Container className=\"py-12\">\n          <Alert type=\"error\">You must be logged in to access this page.</Alert>\n        </Container>\n      </Layout>\n    );\n  }\n  \n  return (\n    <Layout>\n      <Container className=\"py-8\">\n        <div className=\"max-w-3xl mx-auto\">\n          <h1 className=\"text-3xl font-bold tracking-tight text-gray-900\">Account Settings</h1>\n          \n          {success && (\n            <Alert type=\"success\" className=\"mt-6\" onClose={() => setSuccess('')}>\n              {success}\n            </Alert>\n          )}\n          \n          {error && (\n            <Alert type=\"error\" className=\"mt-6\" onClose={() => setError('')}>\n              {error}\n            </Alert>\n          )}\n          \n          {/* Profile Information Form */}\n          <div className=\"mt-8 bg-white shadow overflow-hidden sm:rounded-lg\">\n            <div className=\"px-4 py-5 sm:px-6\">\n              <h2 className=\"text-lg font-medium text-gray-900\">Profile Information</h2>\n              <p className=\"mt-1 text-sm text-gray-500\">\n                Update your account's profile information.\n              </p>\n            </div>\n            <div className=\"border-t border-gray-200 px-4 py-5 sm:px-6\">\n              <form onSubmit={handleProfileSubmit} className=\"space-y-6\">\n                <div>\n                  <label htmlFor=\"displayName\" className=\"block text-sm font-medium text-gray-700\">\n                    Display Name\n                  </label>\n                  <div className=\"mt-1\">\n                    <input\n                      id=\"displayName\"\n                      name=\"displayName\"\n                      type=\"text\"\n                      required\n                      value={formData.displayName}\n                      onChange={handleChange}\n                      className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                    />\n                  </div>\n                </div>\n                \n                <div>\n                  <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                    Email\n                  </label>\n                  <div className=\"mt-1\">\n                    <input\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      disabled\n                      value={formData.email}\n                      className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 bg-gray-50 text-gray-500 sm:text-sm\"\n                    />\n                  </div>\n                  <p className=\"mt-1 text-xs text-gray-500\">\n                    Email cannot be changed. Contact support if you need to update your email.\n                  </p>\n                </div>\n                \n                <div>\n                  <button\n                    type=\"submit\"\n                    disabled={updateProfileMutation.isLoading}\n                    className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    {updateProfileMutation.isLoading ? (\n                      <>\n                        <Spinner size=\"sm\" color=\"text-white\" className=\"mr-2\" />\n                        Saving...\n                      </>\n                    ) : 'Save Changes'}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n          \n          {/* Change Password Form */}\n          <div className=\"mt-8 bg-white shadow overflow-hidden sm:rounded-lg\">\n            <div className=\"px-4 py-5 sm:px-6\">\n              <h2 className=\"text-lg font-medium text-gray-900\">Change Password</h2>\n              <p className=\"mt-1 text-sm text-gray-500\">\n                Ensure your account is using a secure password.\n              </p>\n            </div>\n            <div className=\"border-t border-gray-200 px-4 py-5 sm:px-6\">\n              <form onSubmit={handlePasswordSubmit} className=\"space-y-6\">\n                <div>\n                  <label htmlFor=\"currentPassword\" className=\"block text-sm font-medium text-gray-700\">\n                    Current Password\n                  </label>\n                  <div className=\"mt-1\">\n                    <input\n                      id=\"currentPassword\"\n                      name=\"currentPassword\"\n                      type=\"password\"\n                      required\n                      value={formData.currentPassword}\n                      onChange={handleChange}\n                      className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                    />\n                  </div>\n                </div>\n                \n                <div>\n                  <label htmlFor=\"newPassword\" className=\"block text-sm font-medium text-gray-700\">\n                    New Password\n                  </label>\n                  <div className=\"mt-1\">\n                    <input\n                      id=\"newPassword\"\n                      name=\"newPassword\"\n                      type=\"password\"\n                      required\n                      value={formData.newPassword}\n                      onChange={handleChange}\n                      className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                    />\n                  </div>\n                  <p className=\"mt-1 text-xs text-gray-500\">\n                    Password must be at least 8 characters long.\n                  </p>\n                </div>\n                \n                <div>\n                  <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n                    Confirm New Password\n                  </label>\n                  <div className=\"mt-1\">\n                    <input\n                      id=\"confirmPassword\"\n                      name=\"confirmPassword\"\n                      type=\"password\"\n                      required\n                      value={formData.confirmPassword}\n                      onChange={handleChange}\n                      className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                    />\n                  </div>\n                </div>\n                \n                <div>\n                  <button\n                    type=\"submit\"\n                    disabled={changePasswordMutation.isLoading}\n                    className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    {changePasswordMutation.isLoading ? (\n                      <>\n                        <Spinner size=\"sm\" color=\"text-white\" className=\"mr-2\" />\n                        Changing Password...\n                      </>\n                    ) : 'Change Password'}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n          \n          {/* Delete Account Section */}\n          <div className=\"mt-8 bg-white shadow overflow-hidden sm:rounded-lg\">\n            <div className=\"px-4 py-5 sm:px-6\">\n              <h2 className=\"text-lg font-medium text-red-600\">Delete Account</h2>\n              <p className=\"mt-1 text-sm text-gray-500\">\n                Once your account is deleted, all of your data will be permanently removed.\n              </p>\n            </div>\n            <div className=\"border-t border-gray-200 px-4 py-5 sm:px-6\">\n              <button\n                type=\"button\"\n                className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n                onClick={() => {\n                  if (window.confirm('Are you sure you want to delete your account? This action cannot be undone.')) {\n                    // Delete account functionality will be implemented later\n                  }\n                }}\n              >\n                Delete Account\n              </button>\n            </div>\n          </div>\n        </div>\n      </Container>\n    </Layout>\n  );\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n"],"names":["React","require","objectIs","Object","is","x","y","useState","useEffect","useLayoutEffect","useDebugValue","checkIfSnapshotChanged","inst","latestGetSnapshot","getSnapshot","value","nextValue","error","shim","window","document","createElement","subscribe","_useState","forceUpdate","exports","useSyncExternalStore","ProfileSettingsPage","user","logout","useAuth","navigate","useNavigate","formData","setFormData","displayName","email","currentPassword","newPassword","confirmPassword","setError","success","setSuccess","updateProfileMutation","useMutation","data","UserService","updateProfile","onSuccess","setTimeout","onError","err","message","changePasswordMutation","changePassword","handleChange","e","name","target","prev","_objectSpread","_jsx","Layout","children","Container","className","_jsxs","Alert","type","onClose","onSubmit","preventDefault","trim","mutate","htmlFor","id","required","onChange","disabled","isLoading","_Fragment","Spinner","size","color","length","onClick","confirm","module"],"sourceRoot":""}