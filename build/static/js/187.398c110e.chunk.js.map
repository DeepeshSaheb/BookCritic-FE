{"version":3,"file":"static/js/187.398c110e.chunk.js","mappings":"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","sources":["../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.js","components/ui/star-rating.tsx","pages/books/book-detail.tsx","services/review-service.ts","components/ui/pagination.tsx","../node_modules/use-sync-external-store/shim/index.js"],"sourcesContent":["/**\n * @license React\n * use-sync-external-store-shim.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useState = React.useState,\n  useEffect = React.useEffect,\n  useLayoutEffect = React.useLayoutEffect,\n  useDebugValue = React.useDebugValue;\nfunction useSyncExternalStore$2(subscribe, getSnapshot) {\n  var value = getSnapshot(),\n    _useState = useState({ inst: { value: value, getSnapshot: getSnapshot } }),\n    inst = _useState[0].inst,\n    forceUpdate = _useState[1];\n  useLayoutEffect(\n    function () {\n      inst.value = value;\n      inst.getSnapshot = getSnapshot;\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n    },\n    [subscribe, value, getSnapshot]\n  );\n  useEffect(\n    function () {\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      return subscribe(function () {\n        checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      });\n    },\n    [subscribe]\n  );\n  useDebugValue(value);\n  return value;\n}\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  inst = inst.value;\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(inst, nextValue);\n  } catch (error) {\n    return !0;\n  }\n}\nfunction useSyncExternalStore$1(subscribe, getSnapshot) {\n  return getSnapshot();\n}\nvar shim =\n  \"undefined\" === typeof window ||\n  \"undefined\" === typeof window.document ||\n  \"undefined\" === typeof window.document.createElement\n    ? useSyncExternalStore$1\n    : useSyncExternalStore$2;\nexports.useSyncExternalStore =\n  void 0 !== React.useSyncExternalStore ? React.useSyncExternalStore : shim;\n","import React, { useState } from 'react';\n\nexport interface StarRatingProps {\n  rating?: number;\n  maxRating?: number;\n  size?: 'sm' | 'md' | 'lg';\n  color?: string;\n  readOnly?: boolean;\n  onChange?: (rating: number) => void;\n  className?: string;\n}\n\n/**\n * Star rating component for displaying and selecting ratings\n */\nexport const StarRating: React.FC<StarRatingProps> = ({\n  rating = 0,\n  maxRating = 5,\n  size = 'md',\n  color = 'text-yellow-400',\n  readOnly = false,\n  onChange,\n  className = '',\n}) => {\n  const [hoverRating, setHoverRating] = useState<number>(0);\n  \n  // Size classes\n  const sizeClasses = {\n    sm: 'h-4 w-4',\n    md: 'h-5 w-5',\n    lg: 'h-6 w-6',\n  };\n  \n  // Handle mouse enter on star\n  const handleMouseEnter = (index: number): void => {\n    if (!readOnly) {\n      setHoverRating(index);\n    }\n  };\n  \n  // Handle mouse leave on star container\n  const handleMouseLeave = (): void => {\n    if (!readOnly) {\n      setHoverRating(0);\n    }\n  };\n  \n  // Handle click on star\n  const handleClick = (index: number): void => {\n    if (!readOnly && onChange) {\n      onChange(index);\n    }\n  };\n  \n  // Render stars\n  const renderStars = (): JSX.Element[] => {\n    return Array.from({ length: maxRating }, (_, i) => {\n      const starIndex = i + 1;\n      const isFilled = hoverRating ? starIndex <= hoverRating : starIndex <= rating;\n      \n      return (\n        <span\n          key={i}\n          className={`${readOnly ? '' : 'cursor-pointer'}`}\n          onMouseEnter={() => handleMouseEnter(starIndex)}\n          onClick={() => handleClick(starIndex)}\n          role={readOnly ? undefined : 'button'}\n          tabIndex={readOnly ? undefined : 0}\n          aria-label={readOnly ? `Rating: ${starIndex} of ${maxRating}` : `Rate ${starIndex} of ${maxRating}`}\n        >\n          {isFilled ? (\n            <svg\n              className={`${sizeClasses[size]} ${color}`}\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n              aria-hidden=\"true\"\n            >\n              <path\n                d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\"\n              />\n            </svg>\n          ) : (\n            <svg\n              className={`${sizeClasses[size]} text-gray-300`}\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              aria-hidden=\"true\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\"\n              />\n            </svg>\n          )}\n        </span>\n      );\n    });\n  };\n  \n  return (\n    <div\n      className={`flex ${className}`}\n      onMouseLeave={handleMouseLeave}\n      aria-label={`Rating: ${rating} out of ${maxRating}`}\n    >\n      {renderStars()}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { Layout } from '../../components/layout/layout.tsx';\nimport { Container } from '../../components/layout/container.tsx';\nimport { StarRating } from '../../components/ui/star-rating.tsx';\nimport { Spinner } from '../../components/ui/spinner.tsx';\nimport { Alert } from '../../components/ui/alert.tsx';\nimport { Pagination } from '../../components/ui/pagination.tsx';\nimport { useAuth } from '../../context/auth-context.tsx';\nimport { BookService } from '../../services/book-service.ts';\nimport { ReviewService } from '../../services/review-service.ts';\nimport { UserService } from '../../services/user-service.ts';\nimport { Book, Review, ReviewResponse } from '../../types';\n\n/**\n * Book detail page component\n */\nexport const BookDetailPage: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const { isAuthenticated, user } = useAuth();\n  const [reviewPage, setReviewPage] = useState<number>(1);\n  const reviewsPerPage = 5;\n  const queryClient = useQueryClient();\n  const [isInReadingList, setIsInReadingList] = useState<boolean>(false);\n  \n  // Fetch book details\n  const { \n    data: book, \n    isLoading: bookLoading, \n    error: bookError \n  } = useQuery<Book>(\n    ['book', id],\n    () => BookService.getBookById(id!),\n    {\n      enabled: !!id,\n      staleTime: 5 * 60 * 1000, // 5 minutes\n    }\n  );\n  \n  // Check if book is in reading list\n  const {\n    data: readingListData,\n    isLoading: readingListLoading\n  } = useQuery(\n    ['readingList', id],\n    () => UserService.getReadingList(0, 100),\n    {\n      enabled: !!id && isAuthenticated,\n      staleTime: 5 * 60 * 1000, // 5 minutes\n      onSuccess: (data) => {\n        const isInList = data.books.some((book) => book.id === id);\n        setIsInReadingList(isInList);\n      }\n    }\n  );\n  \n  // Add to reading list mutation\n  const addToReadingListMutation = useMutation(\n    () => UserService.addToReadingList(id!),\n    {\n      onSuccess: () => {\n        setIsInReadingList(true);\n        queryClient.invalidateQueries(['readingList']);\n      },\n      onError: (err: any) => {\n        alert(err?.message || 'Failed to add book to reading list. Please try again.');\n      }\n    }\n  );\n  \n  // Remove from reading list mutation\n  const removeFromReadingListMutation = useMutation(\n    () => UserService.removeFromReadingList(id!),\n    {\n      onSuccess: () => {\n        setIsInReadingList(false);\n        queryClient.invalidateQueries(['readingList']);\n      },\n      onError: (err: any) => {\n        alert(err?.message || 'Failed to remove book from reading list. Please try again.');\n      }\n    }\n  );\n  \n  // Handle reading list toggle\n  const handleReadingListToggle = (): void => {\n    if (isInReadingList) {\n      if (window.confirm('Are you sure you want to remove this book from your reading list?')) {\n        removeFromReadingListMutation.mutate();\n      }\n    } else {\n      addToReadingListMutation.mutate();\n    }\n  };\n  \n  // Fetch book reviews with pagination\n  const { \n    data: reviewsData, \n    isLoading: reviewsLoading, \n    error: reviewsError \n  } = useQuery<ReviewResponse>(\n    ['bookReviews', id, reviewPage],\n    () => ReviewService.getBookReviews(id!, (reviewPage - 1) * reviewsPerPage, reviewsPerPage),\n    {\n      enabled: !!id,\n      keepPreviousData: true,\n      staleTime: 5 * 60 * 1000, // 5 minutes\n    }\n  );\n  \n  // Handle review page change\n  const handleReviewPageChange = (page: number): void => {\n    setReviewPage(page);\n    window.scrollTo({ top: document.getElementById('reviews')?.offsetTop || 0, behavior: 'smooth' });\n  };\n  \n  // Format date for display\n  const formatDate = (dateString?: string): string => {\n    if (!dateString) return 'Unknown';\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n    });\n  };\n  \n  // Render review item\n  const renderReview = (review: Review): React.ReactNode => (\n    <div key={review.id} className=\"border-b border-gray-200 py-6 last:border-b-0\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center\">\n          <div className=\"mr-4 h-10 w-10 flex-shrink-0 rounded-full bg-gray-200 flex items-center justify-center\">\n            <span className=\"text-gray-500 font-medium\">\n              {review.user.displayName.charAt(0).toUpperCase()}\n            </span>\n          </div>\n          <div>\n            <h4 className=\"text-sm font-medium text-gray-900\">{review.user.displayName}</h4>\n            <div className=\"mt-1 flex items-center\">\n              <StarRating rating={review.rating} readOnly size=\"sm\" />\n              <span className=\"ml-2 text-sm text-gray-500\">\n                {formatDate(review.createdAt)}\n              </span>\n            </div>\n          </div>\n        </div>\n        \n        {/* Show edit/delete buttons if user owns this review */}\n        {isAuthenticated && user?.id === review.user.id && (\n          <div className=\"flex space-x-2\">\n            <Link\n              to={`/reviews/${review.id}/edit`}\n              className=\"text-sm font-medium text-primary-600 hover:text-primary-500\"\n            >\n              Edit\n            </Link>\n            <button\n              className=\"text-sm font-medium text-red-600 hover:text-red-500\"\n              onClick={() => {/* Delete functionality will be implemented later */}}\n            >\n              Delete\n            </button>\n          </div>\n        )}\n      </div>\n      <div className=\"mt-4 space-y-6 text-sm text-gray-600\">\n        <p>{review.content}</p>\n      </div>\n    </div>\n  );\n  \n  if (bookLoading) {\n    return (\n      <Layout>\n        <Container className=\"py-12\">\n          <div className=\"flex justify-center\">\n            <Spinner size=\"lg\" />\n          </div>\n        </Container>\n      </Layout>\n    );\n  }\n  \n  if (bookError) {\n    return (\n      <Layout>\n        <Container className=\"py-12\">\n          <Alert type=\"error\">Failed to load book details. Please try again later.</Alert>\n        </Container>\n      </Layout>\n    );\n  }\n  \n  if (!book) {\n    return (\n      <Layout>\n        <Container className=\"py-12\">\n          <Alert type=\"error\">Book not found.</Alert>\n        </Container>\n      </Layout>\n    );\n  }\n  \n  return (\n    <Layout>\n      <Container className=\"py-8\">\n        {/* Book details section */}\n        <div className=\"grid grid-cols-1 gap-8 md:grid-cols-3\">\n          {/* Book cover */}\n          <div className=\"md:col-span-1\">\n            <div className=\"aspect-w-2 aspect-h-3 overflow-hidden rounded-lg\">\n              <img\n                src={book.coverImageUrl || 'https://via.placeholder.com/300x450?text=No+Cover'}\n                alt={book.title}\n                className=\"h-full w-full object-cover object-center\"\n              />\n            </div>\n            \n            {/* Add to reading list / Write review buttons */}\n            {isAuthenticated && (\n              <div className=\"mt-6 space-y-3\">\n                <button\n                  type=\"button\"\n                  onClick={handleReadingListToggle}\n                  disabled={addToReadingListMutation.isLoading || removeFromReadingListMutation.isLoading}\n                  className={`w-full flex justify-center items-center px-4 py-2 border rounded-md shadow-sm text-sm font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 ${isInReadingList \n                    ? 'border-red-300 text-red-700 bg-red-50 hover:bg-red-100' \n                    : 'border-transparent text-white bg-primary-600 hover:bg-primary-700'}`}\n                >\n                  {addToReadingListMutation.isLoading || removeFromReadingListMutation.isLoading ? (\n                    <span className=\"inline-flex items-center\">\n                      <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-current\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                      </svg>\n                      Processing...\n                    </span>\n                  ) : isInReadingList ? (\n                    'Remove from Reading List'\n                  ) : (\n                    'Add to Reading List'\n                  )}\n                </button>\n                <Link\n                  to={`/books/${book.id}/review`}\n                  className=\"w-full flex justify-center items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n                >\n                  Write a Review\n                </Link>\n              </div>\n            )}\n          </div>\n          \n          {/* Book info */}\n          <div className=\"md:col-span-2\">\n            <h1 className=\"text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl\">{book.title}</h1>\n            <p className=\"mt-2 text-lg text-gray-600\">by {book.author}</p>\n            \n            <div className=\"mt-4 flex items-center\">\n              <StarRating rating={book.averageRating || 0} readOnly size=\"md\" />\n              <span className=\"ml-2 text-sm text-gray-500\">\n                {book.averageRating?.toFixed(1) || 'No ratings'} ({book.totalReviews} {book.totalReviews === 1 ? 'review' : 'reviews'})\n              </span>\n            </div>\n            \n            {book.isbn && (\n              <p className=\"mt-2 text-sm text-gray-500\">ISBN: {book.isbn}</p>\n            )}\n            \n            {book.publishedDate && (\n              <p className=\"mt-1 text-sm text-gray-500\">\n                Published: {formatDate(book.publishedDate)}\n              </p>\n            )}\n            \n            {book.genres && book.genres.length > 0 && (\n              <div className=\"mt-4\">\n                <h3 className=\"text-sm font-medium text-gray-900\">Genres</h3>\n                <div className=\"mt-2 flex flex-wrap gap-2\">\n                  {book.genres.map((genre) => (\n                    <span\n                      key={genre}\n                      className=\"inline-flex items-center rounded-full bg-primary-100 px-3 py-0.5 text-sm font-medium text-primary-800\"\n                    >\n                      {genre}\n                    </span>\n                  ))}\n                </div>\n              </div>\n            )}\n            \n            {book.description && (\n              <div className=\"mt-6\">\n                <h3 className=\"text-sm font-medium text-gray-900\">Description</h3>\n                <div className=\"mt-2 space-y-4 text-base text-gray-600\">\n                  <p>{book.description}</p>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n        \n        {/* Reviews section */}\n        <div id=\"reviews\" className=\"mt-16 border-t border-gray-200 pt-10\">\n          <h2 className=\"text-2xl font-bold tracking-tight text-gray-900\">Reviews</h2>\n          \n          {/* Write review CTA for authenticated users */}\n          {isAuthenticated && (\n            <div className=\"mt-4 flex items-center justify-between\">\n              <p className=\"text-sm text-gray-500\">\n                Share your thoughts with other readers.\n              </p>\n              <Link\n                to={`/books/${book.id}/review`}\n                className=\"flex items-center justify-center rounded-md border border-transparent bg-primary-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2\"\n              >\n                Write a Review\n              </Link>\n            </div>\n          )}\n          \n          {/* Reviews list */}\n          <div className=\"mt-6\">\n            {reviewsLoading ? (\n              <div className=\"flex justify-center py-12\">\n                <Spinner size=\"md\" />\n              </div>\n            ) : reviewsError ? (\n              <Alert type=\"error\">Failed to load reviews. Please try again later.</Alert>\n            ) : reviewsData && reviewsData.reviews.length > 0 ? (\n              <>\n                <div className=\"flow-root\">\n                  <div className=\"-my-6 divide-y divide-gray-200\">\n                    {reviewsData.reviews.map(renderReview)}\n                  </div>\n                </div>\n                \n                {/* Pagination for reviews */}\n                {reviewsData.total > reviewsPerPage && (\n                  <div className=\"mt-8 flex justify-center\">\n                    <Pagination\n                      currentPage={reviewPage}\n                      totalPages={Math.ceil(reviewsData.total / reviewsPerPage)}\n                      onPageChange={handleReviewPageChange}\n                    />\n                  </div>\n                )}\n              </>\n            ) : (\n              <div className=\"py-12 text-center text-gray-500\">\n                No reviews yet. Be the first to review this book!\n              </div>\n            )}\n          </div>\n        </div>\n      </Container>\n    </Layout>\n  );\n};\n","import api from './api.ts';\nimport { Review, ReviewResponse, CreateReviewFormData, UpdateReviewFormData } from '../types';\n\n/**\n * Service for handling review-related API calls\n */\nexport const ReviewService = {\n  /**\n   * Get all reviews with pagination\n   */\n  getReviews: async (skip = 0, take = 10): Promise<ReviewResponse> => {\n    return api.get<ReviewResponse>(`/reviews?skip=${skip}&take=${take}`);\n  },\n\n  /**\n   * Get reviews for a specific book\n   */\n  getBookReviews: async (bookId: string, skip = 0, take = 10): Promise<ReviewResponse> => {\n    return api.get<ReviewResponse>(`/reviews/book/${bookId}?skip=${skip}&take=${take}`);\n  },\n\n  /**\n   * Get reviews by a specific user\n   */\n  getUserReviews: async (userId: string, skip = 0, take = 10): Promise<ReviewResponse> => {\n    return api.get<ReviewResponse>(`/reviews/user/${userId}?skip=${skip}&take=${take}`);\n  },\n\n  /**\n   * Get a review by ID\n   */\n  getReviewById: async (id: string): Promise<Review> => {\n    return api.get<Review>(`/reviews/${id}`);\n  },\n\n  /**\n   * Create a new review\n   */\n  createReview: async (reviewData: CreateReviewFormData): Promise<Review> => {\n    return api.post<Review>('/reviews', {\n      bookId: reviewData.bookId,\n      content: reviewData.content,\n      rating: reviewData.rating,\n    });\n  },\n\n  /**\n   * Update a review\n   */\n  updateReview: async (id: string, reviewData: UpdateReviewFormData): Promise<Review> => {\n    return api.patch<Review>(`/reviews/${id}`, {\n      content: reviewData.content,\n      rating: reviewData.rating,\n    });\n  },\n\n  /**\n   * Delete a review\n   */\n  deleteReview: async (id: string): Promise<void> => {\n    return api.delete<void>(`/reviews/${id}`);\n  },\n\n  /**\n   * Get average rating for a book\n   */\n  getAverageRating: async (bookId: string): Promise<{ averageRating: number }> => {\n    return api.get<{ averageRating: number }>(`/reviews/book/${bookId}/average-rating`);\n  },\n};\n","import React from 'react';\n\nexport interface PaginationProps {\n  currentPage: number;\n  totalPages: number;\n  onPageChange: (page: number) => void;\n  className?: string;\n}\n\n/**\n * Pagination component for navigating through pages of content\n */\nexport const Pagination: React.FC<PaginationProps> = ({\n  currentPage,\n  totalPages,\n  onPageChange,\n  className = '',\n}) => {\n  // Don't render pagination if there's only one page\n  if (totalPages <= 1) {\n    return null;\n  }\n\n  // Calculate page numbers to display\n  const getPageNumbers = (): number[] => {\n    const pages: number[] = [];\n    \n    // Always show first page\n    pages.push(1);\n    \n    // Calculate range around current page\n    const rangeStart = Math.max(2, currentPage - 1);\n    const rangeEnd = Math.min(totalPages - 1, currentPage + 1);\n    \n    // Add ellipsis after first page if needed\n    if (rangeStart > 2) {\n      pages.push(-1); // -1 represents ellipsis\n    }\n    \n    // Add pages in range\n    for (let i = rangeStart; i <= rangeEnd; i++) {\n      pages.push(i);\n    }\n    \n    // Add ellipsis before last page if needed\n    if (rangeEnd < totalPages - 1) {\n      pages.push(-2); // -2 represents ellipsis (different key from first ellipsis)\n    }\n    \n    // Always show last page if more than one page\n    if (totalPages > 1) {\n      pages.push(totalPages);\n    }\n    \n    return pages;\n  };\n\n  return (\n    <nav\n      className={`flex items-center justify-between border-t border-gray-200 px-4 sm:px-0 py-3 ${className}`}\n      aria-label=\"Pagination\"\n    >\n      <div className=\"hidden sm:block\">\n        <p className=\"text-sm text-gray-700\">\n          Showing page <span className=\"font-medium\">{currentPage}</span> of{' '}\n          <span className=\"font-medium\">{totalPages}</span>\n        </p>\n      </div>\n      <div className=\"flex flex-1 justify-between sm:justify-end\">\n        <button\n          onClick={() => onPageChange(currentPage - 1)}\n          disabled={currentPage === 1}\n          className=\"relative inline-flex items-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0 disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          Previous\n        </button>\n        <div className=\"hidden sm:flex sm:items-center\">\n          <div className=\"flex items-center space-x-1\">\n            {getPageNumbers().map((page, index) => {\n              // Render ellipsis\n              if (page < 0) {\n                return (\n                  <span\n                    key={page}\n                    className=\"relative inline-flex items-center px-4 py-2 text-sm font-semibold text-gray-700\"\n                  >\n                    ...\n                  </span>\n                );\n              }\n              \n              // Render page number\n              return (\n                <button\n                  key={page}\n                  onClick={() => onPageChange(page)}\n                  className={`relative inline-flex items-center px-4 py-2 text-sm font-semibold ${\n                    page === currentPage\n                      ? 'bg-primary-600 text-white focus:z-20 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary-600'\n                      : 'text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0'\n                  }`}\n                  aria-current={page === currentPage ? 'page' : undefined}\n                >\n                  {page}\n                </button>\n              );\n            })}\n          </div>\n        </div>\n        <button\n          onClick={() => onPageChange(currentPage + 1)}\n          disabled={currentPage === totalPages}\n          className=\"relative ml-3 inline-flex items-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0 disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          Next\n        </button>\n      </div>\n    </nav>\n  );\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n"],"names":["React","require","objectIs","Object","is","x","y","useState","useEffect","useLayoutEffect","useDebugValue","checkIfSnapshotChanged","inst","latestGetSnapshot","getSnapshot","value","nextValue","error","shim","window","document","createElement","subscribe","_useState","forceUpdate","exports","useSyncExternalStore","StarRating","_ref","rating","maxRating","size","color","readOnly","onChange","className","hoverRating","setHoverRating","sizeClasses","sm","md","lg","_jsx","concat","onMouseLeave","handleMouseLeave","children","Array","from","length","_","i","starIndex","isFilled","onMouseEnter","handleMouseEnter","index","onClick","handleClick","role","undefined","tabIndex","xmlns","viewBox","fill","d","stroke","strokeLinecap","strokeLinejoin","strokeWidth","BookDetailPage","_book$averageRating","id","useParams","isAuthenticated","user","useAuth","reviewPage","setReviewPage","queryClient","useQueryClient","isInReadingList","setIsInReadingList","data","book","isLoading","bookLoading","bookError","useQuery","BookService","getBookById","enabled","staleTime","readingListData","readingListLoading","UserService","getReadingList","onSuccess","isInList","books","some","addToReadingListMutation","useMutation","addToReadingList","invalidateQueries","onError","err","alert","message","removeFromReadingListMutation","removeFromReadingList","reviewsData","reviewsLoading","reviewsError","ReviewService","getBookReviews","keepPreviousData","formatDate","dateString","Date","toLocaleDateString","year","month","day","Layout","Container","Spinner","Alert","type","_jsxs","src","coverImageUrl","alt","title","handleReadingListToggle","confirm","mutate","disabled","cx","cy","r","Link","to","author","averageRating","toFixed","totalReviews","isbn","publishedDate","genres","map","genre","description","reviews","_Fragment","review","displayName","charAt","toUpperCase","createdAt","content","total","Pagination","currentPage","totalPages","Math","ceil","onPageChange","page","_document$getElementB","scrollTo","top","getElementById","offsetTop","behavior","getReviews","async","skip","arguments","take","api","get","bookId","getUserReviews","userId","getReviewById","createReview","post","reviewData","updateReview","patch","deleteReview","delete","getAverageRating","getPageNumbers","pages","push","rangeStart","max","rangeEnd","min","module"],"sourceRoot":""}