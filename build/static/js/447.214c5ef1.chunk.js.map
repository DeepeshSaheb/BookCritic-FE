{"version":3,"file":"static/js/447.214c5ef1.chunk.js","mappings":";+GAWA,IAAIA,EAAQC,EAAQ,MAIpB,IAAIC,EAAW,oBAAsBC,OAAOC,GAAKD,OAAOC,GAHxD,SAAYC,EAAGC,GACb,OAAQD,IAAMC,IAAM,IAAMD,GAAK,EAAIA,IAAM,EAAIC,IAAQD,IAAMA,GAAKC,IAAMA,CACxE,EAEEC,EAAWP,EAAMO,SACjBC,EAAYR,EAAMQ,UAClBC,EAAkBT,EAAMS,gBACxBC,EAAgBV,EAAMU,cA0BxB,SAASC,EAAuBC,GAC9B,IAAIC,EAAoBD,EAAKE,YAC7BF,EAAOA,EAAKG,MACZ,IACE,IAAIC,EAAYH,IAChB,OAAQX,EAASU,EAAMI,EACzB,CAAE,MAAOC,GACP,OAAO,CACT,CACF,CAIA,IAAIC,EACF,qBAAuBC,QACvB,qBAAuBA,OAAOC,UAC9B,qBAAuBD,OAAOC,SAASC,cANzC,SAAgCC,EAAWR,GACzC,OAAOA,GACT,EArCA,SAAgCQ,EAAWR,GACzC,IAAIC,EAAQD,IACVS,EAAYhB,EAAS,CAAEK,KAAM,CAAEG,MAAOA,EAAOD,YAAaA,KAC1DF,EAAOW,EAAU,GAAGX,KACpBY,EAAcD,EAAU,GAmB1B,OAlBAd,EACE,WACEG,EAAKG,MAAQA,EACbH,EAAKE,YAAcA,EACnBH,EAAuBC,IAASY,EAAY,CAAEZ,KAAMA,GACtD,EACA,CAACU,EAAWP,EAAOD,IAErBN,EACE,WAEE,OADAG,EAAuBC,IAASY,EAAY,CAAEZ,KAAMA,IAC7CU,EAAU,WACfX,EAAuBC,IAASY,EAAY,CAAEZ,KAAMA,GACtD,EACF,EACA,CAACU,IAEHZ,EAAcK,GACPA,CACT,EAoBAU,EAAQC,0BACN,IAAW1B,EAAM0B,qBAAuB1B,EAAM0B,qBAAuBR,C,gDCjDhE,MAAMS,EAAe,CAI1BC,SAAUC,iBAAwD,IAAjDC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGG,EAAIH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAChC,OAAOI,EAAAA,EAAIC,IAAG,qBAAAC,OAAqCP,EAAI,UAAAO,OAASH,GAClE,EAKAI,YAAaT,SACJM,EAAAA,EAAIC,IAAG,gBAAAC,OAAuBE,IAMvCC,WAAYX,MAAOU,EAAYE,IACtBN,EAAAA,EAAIO,MAAK,gBAAAL,OAAuBE,GAAME,GAM/CE,WAAYd,SACHM,EAAAA,EAAIS,OAAM,gBAAAP,OAAuBE,IAM1CM,kBAAmBhB,SAYVM,EAAAA,EAAIC,IAWR,0BAMLU,wBAAyBjB,iBAiBlB,IAjByBC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGG,EAAIH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAkB/C,OAAOI,EAAAA,EAAIC,IAAG,kCAAAC,OAiBuBP,EAAI,UAAAO,OAASH,GACpD,EAKAa,cAAelB,SACNM,EAAAA,EAAIa,KAAI,kBAAAX,OAAyBE,EAAE,aAM5CU,aAAcpB,SACLM,EAAAA,EAAIa,KAAI,kBAAAX,OAAyBE,EAAE,Y,uLCzGvC,MAAMW,EAA2BA,KACtC,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,KACdC,GAAcC,EAAAA,EAAAA,OACbC,EAAaC,IAAkBjD,EAAAA,EAAAA,UAAiB,IAChDkD,EAAaC,IAAkBnD,EAAAA,EAAAA,WAAkB,IACjDoD,EAAcC,IAAmBrD,EAAAA,EAAAA,UAAsB,OACvDsD,EAAUC,IAAevD,EAAAA,EAAAA,UAAuB,CACrDgC,GAAI,GACJwB,YAAa,GACbC,MAAO,GACPC,KAAM,UAEDC,EAAWC,IAAgB5D,EAAAA,EAAAA,UAAiB,KAKjDkC,KAAM2B,EAAS,UACfC,EAAS,MACTpD,IACEqD,EAAAA,EAAAA,GACF,CAAC,aAAcf,GACf,IAAM5B,EAAAA,EAAaC,SATA,IASU2B,EAAc,GATxB,IAUnB,CACEgB,kBAAkB,EAClBC,UAAW,IACXC,QAAStB,IAKPuB,GAAqBC,EAAAA,EAAAA,GACxBlC,GAAuBd,EAAAA,EAAaa,WAAWC,EAAKF,GAAI,CACvDwB,YAAatB,EAAKsB,YAClBE,KAAMxB,EAAKwB,OAEb,CACEW,UAAWA,KACTvB,EAAYwB,kBAAkB,CAAC,eAC/BC,IACApB,GAAe,IAEjBqB,QAAUC,IACRb,GAAgB,OAAHa,QAAG,IAAHA,OAAG,EAAHA,EAAKC,UAAW,+CAM7BC,GAAqBP,EAAAA,EAAAA,GACxBpC,GAAeZ,EAAAA,EAAagB,WAAWJ,GACxC,CACEqC,UAAWA,KACTvB,EAAYwB,kBAAkB,CAAC,gBAEjCE,QAAUC,IACRG,OAAS,OAAHH,QAAG,IAAHA,OAAG,EAAHA,EAAKC,UAAW,+CAWtBH,EAAYA,KAChBhB,EAAY,CACVvB,GAAI,GACJwB,YAAa,GACbC,MAAO,GACPC,KAAM,SAERL,EAAgB,MAChBO,EAAa,KAuBTiB,EAAqBC,IACzB,MAAM,KAAEC,EAAI,MAAEvE,GAAUsE,EAAEE,OAC1BzB,EAAa0B,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACZD,GAAI,IACP,CAACF,GAAOvE,MA2BZ,OAAKoC,GAaHuC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAAAC,UACLC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,UAAU,OAAMH,SAAA,EACzBF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,kDAAiDH,SAAC,qBAChEF,EAAAA,EAAAA,KAAA,KAAGK,UAAU,6BAA4BH,SAAC,2CAK1CF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,qBAAoBH,UACjCF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,gDAA+CH,UAC5DF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,4DAA2DH,UACxEF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,wEAAuEH,SACnFvB,GACCqB,EAAAA,EAAAA,KAAA,OAAKK,UAAU,4BAA2BH,UACxCF,EAAAA,EAAAA,KAACM,EAAAA,EAAO,CAACC,KAAK,SAEdhF,GACFyE,EAAAA,EAAAA,KAAA,OAAKK,UAAU,MAAKH,UAClBF,EAAAA,EAAAA,KAACQ,EAAAA,EAAK,CAACC,KAAK,QAAOP,SAAC,oDAEpBxB,GAAaA,EAAUgC,MAAMpE,OAAS,GACxC6D,EAAAA,EAAAA,MAAA,SAAOE,UAAU,sCAAqCH,SAAA,EACpDF,EAAAA,EAAAA,KAAA,SAAOK,UAAU,aAAYH,UAC3BC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MACEW,MAAM,MACNN,UAAU,yEAAwEH,SACnF,UAGDF,EAAAA,EAAAA,KAAA,MACEW,MAAM,MACNN,UAAU,4DAA2DH,SACtE,WAGDF,EAAAA,EAAAA,KAAA,MACEW,MAAM,MACNN,UAAU,4DAA2DH,SACtE,UAGDF,EAAAA,EAAAA,KAAA,MACEW,MAAM,MACNN,UAAU,4DAA2DH,SACtE,YAGDF,EAAAA,EAAAA,KAAA,MACEW,MAAM,MACNN,UAAU,4DAA2DH,SACtE,aAGDF,EAAAA,EAAAA,KAAA,MACEW,MAAM,MACNN,UAAU,oCAAmCH,UAE7CF,EAAAA,EAAAA,KAAA,QAAMK,UAAU,UAASH,SAAC,oBAIhCF,EAAAA,EAAAA,KAAA,SAAOK,UAAU,oCAAmCH,SACjDxB,EAAUgC,MAAME,IAAKC,IACpBV,SAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,6EAA4EH,SACvFW,EAAKxC,eAER2B,EAAAA,EAAAA,KAAA,MAAIK,UAAU,oDAAmDH,SAC9DW,EAAKvC,SAER0B,EAAAA,EAAAA,KAAA,MAAIK,UAAU,oDAAmDH,UAC/DF,EAAAA,EAAAA,KAAA,QAAMK,UAAS,iEAAA1D,OACC,UAAdkE,EAAKtC,KACD,gCACA,+BACH2B,SACAW,EAAKtC,UAGVyB,EAAAA,EAAAA,KAAA,MAAIK,UAAU,oDAAmDH,SAC9DW,EAAKC,WAtGZC,EAsGmCF,EAAKC,UArGnD,IAAIE,KAAKD,GAAYE,mBAAmB,QAAS,CACtDC,KAAM,UACNC,MAAO,OACPC,IAAK,aAkGgE,SAEjDpB,EAAAA,EAAAA,KAAA,MAAIK,UAAU,oDAAmDH,SAC9DW,EAAKQ,aAAe,KAEvBlB,EAAAA,EAAAA,MAAA,MAAIE,UAAU,mFAAkFH,SAAA,EAC9FF,EAAAA,EAAAA,KAAA,UACEsB,QAASA,IAvJbT,KACtB3C,EAAgB2C,GAChBzC,EAAY,CACVvB,GAAIgE,EAAKhE,GACTwB,YAAawC,EAAKxC,YAClBC,MAAOuC,EAAKvC,MACZC,KAAMsC,EAAKtC,OAEbP,GAAe,IA+I0BuD,CAAeV,GAC9BR,UAAU,+CAA8CH,SACzD,UAGDF,EAAAA,EAAAA,KAAA,UACEsB,QAASA,KAAME,OAjJjB3E,EAiJkCgE,EAAKhE,QAhJ3DpB,OAAOgG,QAAQ,6EACjBjC,EAAmBkC,OAAO7E,IAFJA,OAkJEwD,UAAU,kCAAiCH,SAC5C,gBAhCIW,EAAKhE,IArFhBkE,cA8HJf,EAAAA,EAAAA,KAAA,OAAKK,UAAU,gCAA+BH,SAAC,4BAUxDxB,GAAaA,EAAUiD,MApPT,KAqPb3B,EAAAA,EAAAA,KAAA,OAAKK,UAAU,2BAA0BH,UACvCF,EAAAA,EAAAA,KAAC4B,EAAAA,EAAU,CACT/D,YAAaA,EACbgE,WAAYC,KAAKC,KAAKrD,EAAUiD,MAxPvB,IAyPTK,aAxMcC,IACxBnE,EAAemE,QA6MVlE,IACCiC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,qCAAoCH,UACjDC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,yFAAwFH,SAAA,EACrGF,EAAAA,EAAAA,KAAA,OACEK,UAAU,6DACViB,QAASA,IAAMtD,GAAe,MAGhCgC,EAAAA,EAAAA,KAAA,QAAMK,UAAU,qDAAqD,cAAY,OAAMH,SAAC,YAIxFF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,iLAAgLH,UAC7LF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,yBAAwBH,UACrCC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,uDAAsDH,SAAA,EACnEF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,8CAA6CH,SAAC,cAI3D1B,IACCwB,EAAAA,EAAAA,KAACQ,EAAAA,EAAK,CAACC,KAAK,QAAQJ,UAAU,OAAO6B,QAASA,IAAMzD,EAAa,IAAIyB,SAClE1B,KAIL2B,EAAAA,EAAAA,MAAA,QAAMgC,SA1LFxC,IACpBA,EAAEyC,iBACF3D,EAAa,IAGRN,EAASE,YAAYgE,OAK1BrD,EAAmB0C,OAAOvD,GAJxBM,EAAa,6BAoL+B4B,UAAU,iBAAgBH,SAAA,EACtDC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOsC,QAAQ,cAAcjC,UAAU,0CAAyCH,SAAC,kBAGjFF,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLb,KAAK,cACL/C,GAAG,cACHxB,MAAO8C,EAASE,YAChBkE,SAAU7C,EACV8C,UAAQ,EACRnC,UAAU,8JAIdF,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOsC,QAAQ,QAAQjC,UAAU,0CAAyCH,SAAC,WAG3EF,EAAAA,EAAAA,KAAA,SACES,KAAK,QACLb,KAAK,QACL/C,GAAG,QACHxB,MAAO8C,EAASG,MAChBmE,UAAQ,EACRpC,UAAU,iHAEZL,EAAAA,EAAAA,KAAA,KAAGK,UAAU,6BAA4BH,SAAC,iCAK5CC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOsC,QAAQ,OAAOjC,UAAU,0CAAyCH,SAAC,UAG1EC,EAAAA,EAAAA,MAAA,UACEtD,GAAG,OACH+C,KAAK,OACLvE,MAAO8C,EAASI,KAChBgE,SAAU7C,EACVW,UAAU,wJAAuJH,SAAA,EAEjKF,EAAAA,EAAAA,KAAA,UAAQ3E,MAAM,OAAM6E,SAAC,UACrBF,EAAAA,EAAAA,KAAA,UAAQ3E,MAAM,QAAO6E,SAAC,iBAI1BC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,2CAA0CH,SAAA,EACvDF,EAAAA,EAAAA,KAAA,UACES,KAAK,SACLgC,SAAUzD,EAAmBL,UAC7B0B,UAAU,0TAAyTH,SAElUlB,EAAmBL,WAClBwB,EAAAA,EAAAA,MAAAuC,EAAAA,SAAA,CAAAxC,SAAA,EACEF,EAAAA,EAAAA,KAACM,EAAAA,EAAO,CAACC,KAAK,KAAKoC,MAAM,aAAatC,UAAU,SAAS,iBAGzD,YAENL,EAAAA,EAAAA,KAAA,UACES,KAAK,SACLa,QAASA,IAAMtD,GAAe,GAC9BqC,UAAU,qQAAoQH,SAC/Q,mCApOnBF,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAAAC,UACLF,EAAAA,EAAAA,KAACI,EAAAA,EAAS,CAACC,UAAU,QAAOH,UAC1BF,EAAAA,EAAAA,KAACQ,EAAAA,EAAK,CAACC,KAAK,QAAOP,SAAC,wD,uDC9IvB,MAAM0B,EAAwCgB,IAK9C,IAL+C,YACpD/E,EAAW,WACXgE,EAAU,aACVG,EAAY,UACZ3B,EAAY,IACbuC,EAEC,GAAIf,GAAc,EAChB,OAAO,KAqCT,OACE1B,EAAAA,EAAAA,MAAA,OACEE,UAAS,gFAAA1D,OAAkF0D,GAC3F,aAAW,aAAYH,SAAA,EAEvBF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,kBAAiBH,UAC9BC,EAAAA,EAAAA,MAAA,KAAGE,UAAU,wBAAuBH,SAAA,CAAC,iBACtBF,EAAAA,EAAAA,KAAA,QAAMK,UAAU,cAAaH,SAAErC,IAAmB,MAAI,KACnEmC,EAAAA,EAAAA,KAAA,QAAMK,UAAU,cAAaH,SAAE2B,UAGnC1B,EAAAA,EAAAA,MAAA,OAAKE,UAAU,6CAA4CH,SAAA,EACzDF,EAAAA,EAAAA,KAAA,UACEsB,QAASA,IAAMU,EAAanE,EAAc,GAC1C4E,SAA0B,IAAhB5E,EACVwC,UAAU,yOAAwOH,SACnP,cAGDF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,iCAAgCH,UAC7CF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,8BAA6BH,SArD7B2C,MACrB,MAAMC,EAAkB,GAGxBA,EAAMC,KAAK,GAGX,MAAMC,EAAalB,KAAKmB,IAAI,EAAGpF,EAAc,GACvCqF,EAAWpB,KAAKqB,IAAItB,EAAa,EAAGhE,EAAc,GAGpDmF,EAAa,GACfF,EAAMC,MAAM,GAId,IAAK,IAAIK,EAAIJ,EAAYI,GAAKF,EAAUE,IACtCN,EAAMC,KAAKK,GAab,OATIF,EAAWrB,EAAa,GAC1BiB,EAAMC,MAAM,GAIVlB,EAAa,GACfiB,EAAMC,KAAKlB,GAGNiB,GAwBED,GAAiBjC,IAAI,CAACqB,EAAMoB,IAEvBpB,EAAO,GAEPjC,EAAAA,EAAAA,KAAA,QAEEK,UAAU,kFAAiFH,SAC5F,OAFM+B,IAUTjC,EAAAA,EAAAA,KAAA,UAEEsB,QAASA,IAAMU,EAAaC,GAC5B5B,UAAS,qEAAA1D,OACPsF,IAASpE,EACL,sJACA,oGAEN,eAAcoE,IAASpE,EAAc,YAAStB,EAAU2D,SAEvD+B,GATIA,SAefjC,EAAAA,EAAAA,KAAA,UACEsB,QAASA,IAAMU,EAAanE,EAAc,GAC1C4E,SAAU5E,IAAgBgE,EAC1BxB,UAAU,8OAA6OH,SACxP,e,iBC9GPoD,EAAOvH,QAAU,EAAjBuH,K","sources":["../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.js","services/admin-service.ts","pages/admin/users.tsx","components/ui/pagination.tsx","../node_modules/use-sync-external-store/shim/index.js"],"sourcesContent":["/**\n * @license React\n * use-sync-external-store-shim.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useState = React.useState,\n  useEffect = React.useEffect,\n  useLayoutEffect = React.useLayoutEffect,\n  useDebugValue = React.useDebugValue;\nfunction useSyncExternalStore$2(subscribe, getSnapshot) {\n  var value = getSnapshot(),\n    _useState = useState({ inst: { value: value, getSnapshot: getSnapshot } }),\n    inst = _useState[0].inst,\n    forceUpdate = _useState[1];\n  useLayoutEffect(\n    function () {\n      inst.value = value;\n      inst.getSnapshot = getSnapshot;\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n    },\n    [subscribe, value, getSnapshot]\n  );\n  useEffect(\n    function () {\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      return subscribe(function () {\n        checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      });\n    },\n    [subscribe]\n  );\n  useDebugValue(value);\n  return value;\n}\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  inst = inst.value;\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(inst, nextValue);\n  } catch (error) {\n    return !0;\n  }\n}\nfunction useSyncExternalStore$1(subscribe, getSnapshot) {\n  return getSnapshot();\n}\nvar shim =\n  \"undefined\" === typeof window ||\n  \"undefined\" === typeof window.document ||\n  \"undefined\" === typeof window.document.createElement\n    ? useSyncExternalStore$1\n    : useSyncExternalStore$2;\nexports.useSyncExternalStore =\n  void 0 !== React.useSyncExternalStore ? React.useSyncExternalStore : shim;\n","import api from './api.ts';\nimport { User } from '../types';\n\ninterface UsersResponse {\n  users: User[];\n  total: number;\n}\n\ninterface UpdateUserData {\n  displayName?: string;\n  role?: 'user' | 'admin';\n}\n\n/**\n * Service for handling admin-related API calls\n */\nexport const AdminService = {\n  /**\n   * Get all users with pagination\n   */\n  getUsers: async (skip = 0, take = 10): Promise<UsersResponse> => {\n    return api.get<UsersResponse>(`/admin/users?skip=${skip}&take=${take}`);\n  },\n\n  /**\n   * Get user by ID\n   */\n  getUserById: async (id: string): Promise<User> => {\n    return api.get<User>(`/admin/users/${id}`);\n  },\n\n  /**\n   * Update user\n   */\n  updateUser: async (id: string, data: UpdateUserData): Promise<User> => {\n    return api.patch<User>(`/admin/users/${id}`, data);\n  },\n\n  /**\n   * Delete user\n   */\n  deleteUser: async (id: string): Promise<void> => {\n    return api.delete<void>(`/admin/users/${id}`);\n  },\n\n  /**\n   * Get admin dashboard statistics\n   */\n  getDashboardStats: async (): Promise<{\n    totalBooks: number;\n    totalUsers: number;\n    totalReviews: number;\n    recentActivity: Array<{\n      id: string;\n      type: 'book' | 'user' | 'review';\n      action: string;\n      details: string;\n      timestamp: string;\n    }>;\n  }> => {\n    return api.get<{\n      totalBooks: number;\n      totalUsers: number;\n      totalReviews: number;\n      recentActivity: Array<{\n        id: string;\n        type: 'book' | 'user' | 'review';\n        action: string;\n        details: string;\n        timestamp: string;\n      }>;\n    }>('/admin/dashboard/stats');\n  },\n\n  /**\n   * Get reviews that need moderation\n   */\n  getReviewsForModeration: async (skip = 0, take = 10): Promise<{\n    reviews: Array<{\n      id: string;\n      content: string;\n      rating: number;\n      createdAt: string;\n      reportCount: number;\n      book: {\n        id: string;\n        title: string;\n      };\n      user: {\n        id: string;\n        displayName: string;\n      };\n    }>;\n    total: number;\n  }> => {\n    return api.get<{\n      reviews: Array<{\n        id: string;\n        content: string;\n        rating: number;\n        createdAt: string;\n        reportCount: number;\n        book: {\n          id: string;\n          title: string;\n        };\n        user: {\n          id: string;\n          displayName: string;\n        };\n      }>;\n      total: number;\n    }>(`/admin/reviews/moderation?skip=${skip}&take=${take}`);\n  },\n\n  /**\n   * Approve a review\n   */\n  approveReview: async (id: string): Promise<void> => {\n    return api.post<void>(`/admin/reviews/${id}/approve`);\n  },\n\n  /**\n   * Reject a review\n   */\n  rejectReview: async (id: string): Promise<void> => {\n    return api.post<void>(`/admin/reviews/${id}/reject`);\n  },\n};\n","import React, { useState } from 'react';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { Layout } from '../../components/layout/layout.tsx';\nimport { Container } from '../../components/layout/container.tsx';\nimport { Spinner } from '../../components/ui/spinner.tsx';\nimport { Alert } from '../../components/ui/alert.tsx';\nimport { Pagination } from '../../components/ui/pagination.tsx';\nimport { useAuth } from '../../context/auth-context.tsx';\nimport { AdminService } from '../../services/admin-service.ts';\nimport { User } from '../../types';\n\ninterface UserFormData {\n  id: string;\n  displayName: string;\n  email: string;\n  role: 'user' | 'admin';\n}\n\n/**\n * Admin user management page component\n */\nexport const AdminUsersPage: React.FC = () => {\n  const { isAdmin } = useAuth();\n  const queryClient = useQueryClient();\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [formData, setFormData] = useState<UserFormData>({\n    id: '',\n    displayName: '',\n    email: '',\n    role: 'user',\n  });\n  const [formError, setFormError] = useState<string>('');\n  const usersPerPage = 10;\n\n  // Fetch users with pagination\n  const {\n    data: usersData,\n    isLoading,\n    error,\n  } = useQuery(\n    ['adminUsers', currentPage],\n    () => AdminService.getUsers((currentPage - 1) * usersPerPage, usersPerPage),\n    {\n      keepPreviousData: true,\n      staleTime: 5 * 60 * 1000, // 5 minutes\n      enabled: isAdmin,\n    }\n  );\n\n  // Update user mutation\n  const updateUserMutation = useMutation(\n    (data: UserFormData) => AdminService.updateUser(data.id, {\n      displayName: data.displayName,\n      role: data.role,\n    }),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(['adminUsers']);\n        resetForm();\n        setIsModalOpen(false);\n      },\n      onError: (err: any) => {\n        setFormError(err?.message || 'Failed to update user. Please try again.');\n      },\n    }\n  );\n\n  // Delete user mutation\n  const deleteUserMutation = useMutation(\n    (id: string) => AdminService.deleteUser(id),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(['adminUsers']);\n      },\n      onError: (err: any) => {\n        alert(err?.message || 'Failed to delete user. Please try again.');\n      },\n    }\n  );\n\n  // Handle page change\n  const handlePageChange = (page: number): void => {\n    setCurrentPage(page);\n  };\n\n  // Reset form\n  const resetForm = (): void => {\n    setFormData({\n      id: '',\n      displayName: '',\n      email: '',\n      role: 'user',\n    });\n    setSelectedUser(null);\n    setFormError('');\n  };\n\n  // Open modal for editing a user\n  const handleEditUser = (user: User): void => {\n    setSelectedUser(user);\n    setFormData({\n      id: user.id,\n      displayName: user.displayName,\n      email: user.email,\n      role: user.role as 'user' | 'admin',\n    });\n    setIsModalOpen(true);\n  };\n\n  // Handle delete user\n  const handleDeleteUser = (id: string): void => {\n    if (window.confirm('Are you sure you want to delete this user? This action cannot be undone.')) {\n      deleteUserMutation.mutate(id);\n    }\n  };\n\n  // Handle input change\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>): void => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  // Handle form submission\n  const handleSubmit = (e: React.FormEvent): void => {\n    e.preventDefault();\n    setFormError('');\n\n    // Validate form\n    if (!formData.displayName.trim()) {\n      setFormError('Display name is required');\n      return;\n    }\n\n    updateUserMutation.mutate(formData);\n  };\n\n  // Format date for display\n  const formatDate = (dateString: string): string => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n    });\n  };\n\n  if (!isAdmin) {\n    return (\n      <Layout>\n        <Container className=\"py-12\">\n          <Alert type=\"error\">\n            You do not have permission to access this page.\n          </Alert>\n        </Container>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout>\n      <Container className=\"py-8\">\n        <h1 className=\"text-3xl font-bold tracking-tight text-gray-900\">User Management</h1>\n        <p className=\"mt-2 text-lg text-gray-600\">\n          Manage user accounts and permissions.\n        </p>\n\n        {/* Users table */}\n        <div className=\"mt-8 flex flex-col\">\n          <div className=\"-my-2 -mx-4 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n            <div className=\"inline-block min-w-full py-2 align-middle md:px-6 lg:px-8\">\n              <div className=\"overflow-hidden shadow ring-1 ring-black ring-opacity-5 md:rounded-lg\">\n                {isLoading ? (\n                  <div className=\"flex justify-center py-12\">\n                    <Spinner size=\"lg\" />\n                  </div>\n                ) : error ? (\n                  <div className=\"p-6\">\n                    <Alert type=\"error\">Failed to load users. Please try again later.</Alert>\n                  </div>\n                ) : usersData && usersData.users.length > 0 ? (\n                  <table className=\"min-w-full divide-y divide-gray-300\">\n                    <thead className=\"bg-gray-50\">\n                      <tr>\n                        <th\n                          scope=\"col\"\n                          className=\"py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6\"\n                        >\n                          Name\n                        </th>\n                        <th\n                          scope=\"col\"\n                          className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\"\n                        >\n                          Email\n                        </th>\n                        <th\n                          scope=\"col\"\n                          className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\"\n                        >\n                          Role\n                        </th>\n                        <th\n                          scope=\"col\"\n                          className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\"\n                        >\n                          Joined\n                        </th>\n                        <th\n                          scope=\"col\"\n                          className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\"\n                        >\n                          Reviews\n                        </th>\n                        <th\n                          scope=\"col\"\n                          className=\"relative py-3.5 pl-3 pr-4 sm:pr-6\"\n                        >\n                          <span className=\"sr-only\">Actions</span>\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"divide-y divide-gray-200 bg-white\">\n                      {usersData.users.map((user) => (\n                        <tr key={user.id}>\n                          <td className=\"whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 sm:pl-6\">\n                            {user.displayName}\n                          </td>\n                          <td className=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500\">\n                            {user.email}\n                          </td>\n                          <td className=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500\">\n                            <span className={`inline-flex rounded-full px-2 text-xs font-semibold leading-5 ${\n                              user.role === 'admin' \n                                ? 'bg-purple-100 text-purple-800' \n                                : 'bg-green-100 text-green-800'\n                            }`}>\n                              {user.role}\n                            </span>\n                          </td>\n                          <td className=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500\">\n                            {user.createdAt ? formatDate(user.createdAt) : 'N/A'}\n                          </td>\n                          <td className=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500\">\n                            {user.reviewCount || 0}\n                          </td>\n                          <td className=\"relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6\">\n                            <button\n                              onClick={() => handleEditUser(user)}\n                              className=\"text-primary-600 hover:text-primary-900 mr-4\"\n                            >\n                              Edit\n                            </button>\n                            <button\n                              onClick={() => handleDeleteUser(user.id)}\n                              className=\"text-red-600 hover:text-red-900\"\n                            >\n                              Delete\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                ) : (\n                  <div className=\"p-6 text-center text-gray-500\">\n                    No users found.\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Pagination */}\n        {usersData && usersData.total > usersPerPage && (\n          <div className=\"mt-6 flex justify-center\">\n            <Pagination\n              currentPage={currentPage}\n              totalPages={Math.ceil(usersData.total / usersPerPage)}\n              onPageChange={handlePageChange}\n            />\n          </div>\n        )}\n\n        {/* User form modal */}\n        {isModalOpen && (\n          <div className=\"fixed inset-0 z-10 overflow-y-auto\">\n            <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n              <div\n                className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"\n                onClick={() => setIsModalOpen(false)}\n              ></div>\n\n              <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n                &#8203;\n              </span>\n\n              <div className=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6\">\n                <div className=\"sm:flex sm:items-start\">\n                  <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left w-full\">\n                    <h3 className=\"text-lg leading-6 font-medium text-gray-900\">\n                      Edit User\n                    </h3>\n\n                    {formError && (\n                      <Alert type=\"error\" className=\"mt-4\" onClose={() => setFormError('')}>\n                        {formError}\n                      </Alert>\n                    )}\n\n                    <form onSubmit={handleSubmit} className=\"mt-6 space-y-4\">\n                      <div>\n                        <label htmlFor=\"displayName\" className=\"block text-sm font-medium text-gray-700\">\n                          Display Name\n                        </label>\n                        <input\n                          type=\"text\"\n                          name=\"displayName\"\n                          id=\"displayName\"\n                          value={formData.displayName}\n                          onChange={handleInputChange}\n                          required\n                          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                        />\n                      </div>\n\n                      <div>\n                        <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                          Email\n                        </label>\n                        <input\n                          type=\"email\"\n                          name=\"email\"\n                          id=\"email\"\n                          value={formData.email}\n                          disabled\n                          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 bg-gray-50 text-gray-500 sm:text-sm\"\n                        />\n                        <p className=\"mt-1 text-xs text-gray-500\">\n                          Email cannot be changed.\n                        </p>\n                      </div>\n\n                      <div>\n                        <label htmlFor=\"role\" className=\"block text-sm font-medium text-gray-700\">\n                          Role\n                        </label>\n                        <select\n                          id=\"role\"\n                          name=\"role\"\n                          value={formData.role}\n                          onChange={handleInputChange}\n                          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                        >\n                          <option value=\"user\">User</option>\n                          <option value=\"admin\">Admin</option>\n                        </select>\n                      </div>\n\n                      <div className=\"mt-5 sm:mt-4 sm:flex sm:flex-row-reverse\">\n                        <button\n                          type=\"submit\"\n                          disabled={updateUserMutation.isLoading}\n                          className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-primary-600 text-base font-medium text-white hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 sm:ml-3 sm:w-auto sm:text-sm disabled:opacity-50 disabled:cursor-not-allowed\"\n                        >\n                          {updateUserMutation.isLoading ? (\n                            <>\n                              <Spinner size=\"sm\" color=\"text-white\" className=\"mr-2\" />\n                              Updating...\n                            </>\n                          ) : 'Update'}\n                        </button>\n                        <button\n                          type=\"button\"\n                          onClick={() => setIsModalOpen(false)}\n                          className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 sm:mt-0 sm:w-auto sm:text-sm\"\n                        >\n                          Cancel\n                        </button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </Container>\n    </Layout>\n  );\n};\n","import React from 'react';\n\nexport interface PaginationProps {\n  currentPage: number;\n  totalPages: number;\n  onPageChange: (page: number) => void;\n  className?: string;\n}\n\n/**\n * Pagination component for navigating through pages of content\n */\nexport const Pagination: React.FC<PaginationProps> = ({\n  currentPage,\n  totalPages,\n  onPageChange,\n  className = '',\n}) => {\n  // Don't render pagination if there's only one page\n  if (totalPages <= 1) {\n    return null;\n  }\n\n  // Calculate page numbers to display\n  const getPageNumbers = (): number[] => {\n    const pages: number[] = [];\n    \n    // Always show first page\n    pages.push(1);\n    \n    // Calculate range around current page\n    const rangeStart = Math.max(2, currentPage - 1);\n    const rangeEnd = Math.min(totalPages - 1, currentPage + 1);\n    \n    // Add ellipsis after first page if needed\n    if (rangeStart > 2) {\n      pages.push(-1); // -1 represents ellipsis\n    }\n    \n    // Add pages in range\n    for (let i = rangeStart; i <= rangeEnd; i++) {\n      pages.push(i);\n    }\n    \n    // Add ellipsis before last page if needed\n    if (rangeEnd < totalPages - 1) {\n      pages.push(-2); // -2 represents ellipsis (different key from first ellipsis)\n    }\n    \n    // Always show last page if more than one page\n    if (totalPages > 1) {\n      pages.push(totalPages);\n    }\n    \n    return pages;\n  };\n\n  return (\n    <nav\n      className={`flex items-center justify-between border-t border-gray-200 px-4 sm:px-0 py-3 ${className}`}\n      aria-label=\"Pagination\"\n    >\n      <div className=\"hidden sm:block\">\n        <p className=\"text-sm text-gray-700\">\n          Showing page <span className=\"font-medium\">{currentPage}</span> of{' '}\n          <span className=\"font-medium\">{totalPages}</span>\n        </p>\n      </div>\n      <div className=\"flex flex-1 justify-between sm:justify-end\">\n        <button\n          onClick={() => onPageChange(currentPage - 1)}\n          disabled={currentPage === 1}\n          className=\"relative inline-flex items-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0 disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          Previous\n        </button>\n        <div className=\"hidden sm:flex sm:items-center\">\n          <div className=\"flex items-center space-x-1\">\n            {getPageNumbers().map((page, index) => {\n              // Render ellipsis\n              if (page < 0) {\n                return (\n                  <span\n                    key={page}\n                    className=\"relative inline-flex items-center px-4 py-2 text-sm font-semibold text-gray-700\"\n                  >\n                    ...\n                  </span>\n                );\n              }\n              \n              // Render page number\n              return (\n                <button\n                  key={page}\n                  onClick={() => onPageChange(page)}\n                  className={`relative inline-flex items-center px-4 py-2 text-sm font-semibold ${\n                    page === currentPage\n                      ? 'bg-primary-600 text-white focus:z-20 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary-600'\n                      : 'text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0'\n                  }`}\n                  aria-current={page === currentPage ? 'page' : undefined}\n                >\n                  {page}\n                </button>\n              );\n            })}\n          </div>\n        </div>\n        <button\n          onClick={() => onPageChange(currentPage + 1)}\n          disabled={currentPage === totalPages}\n          className=\"relative ml-3 inline-flex items-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0 disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          Next\n        </button>\n      </div>\n    </nav>\n  );\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n"],"names":["React","require","objectIs","Object","is","x","y","useState","useEffect","useLayoutEffect","useDebugValue","checkIfSnapshotChanged","inst","latestGetSnapshot","getSnapshot","value","nextValue","error","shim","window","document","createElement","subscribe","_useState","forceUpdate","exports","useSyncExternalStore","AdminService","getUsers","async","skip","arguments","length","undefined","take","api","get","concat","getUserById","id","updateUser","data","patch","deleteUser","delete","getDashboardStats","getReviewsForModeration","approveReview","post","rejectReview","AdminUsersPage","isAdmin","useAuth","queryClient","useQueryClient","currentPage","setCurrentPage","isModalOpen","setIsModalOpen","selectedUser","setSelectedUser","formData","setFormData","displayName","email","role","formError","setFormError","usersData","isLoading","useQuery","keepPreviousData","staleTime","enabled","updateUserMutation","useMutation","onSuccess","invalidateQueries","resetForm","onError","err","message","deleteUserMutation","alert","handleInputChange","e","name","target","prev","_objectSpread","_jsx","Layout","children","_jsxs","Container","className","Spinner","size","Alert","type","users","scope","map","user","createdAt","dateString","Date","toLocaleDateString","year","month","day","reviewCount","onClick","handleEditUser","handleDeleteUser","confirm","mutate","total","Pagination","totalPages","Math","ceil","onPageChange","page","onClose","onSubmit","preventDefault","trim","htmlFor","onChange","required","disabled","_Fragment","color","_ref","getPageNumbers","pages","push","rangeStart","max","rangeEnd","min","i","index","module"],"sourceRoot":""}