{"version":3,"file":"static/js/126.51ad1969.chunk.js","mappings":"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","sources":["../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.js","components/ui/star-rating.tsx","pages/admin/reviews.tsx","services/admin-service.ts","components/ui/pagination.tsx","../node_modules/use-sync-external-store/shim/index.js"],"sourcesContent":["/**\n * @license React\n * use-sync-external-store-shim.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useState = React.useState,\n  useEffect = React.useEffect,\n  useLayoutEffect = React.useLayoutEffect,\n  useDebugValue = React.useDebugValue;\nfunction useSyncExternalStore$2(subscribe, getSnapshot) {\n  var value = getSnapshot(),\n    _useState = useState({ inst: { value: value, getSnapshot: getSnapshot } }),\n    inst = _useState[0].inst,\n    forceUpdate = _useState[1];\n  useLayoutEffect(\n    function () {\n      inst.value = value;\n      inst.getSnapshot = getSnapshot;\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n    },\n    [subscribe, value, getSnapshot]\n  );\n  useEffect(\n    function () {\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      return subscribe(function () {\n        checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      });\n    },\n    [subscribe]\n  );\n  useDebugValue(value);\n  return value;\n}\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  inst = inst.value;\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(inst, nextValue);\n  } catch (error) {\n    return !0;\n  }\n}\nfunction useSyncExternalStore$1(subscribe, getSnapshot) {\n  return getSnapshot();\n}\nvar shim =\n  \"undefined\" === typeof window ||\n  \"undefined\" === typeof window.document ||\n  \"undefined\" === typeof window.document.createElement\n    ? useSyncExternalStore$1\n    : useSyncExternalStore$2;\nexports.useSyncExternalStore =\n  void 0 !== React.useSyncExternalStore ? React.useSyncExternalStore : shim;\n","import React, { useState } from 'react';\n\nexport interface StarRatingProps {\n  rating?: number;\n  maxRating?: number;\n  size?: 'sm' | 'md' | 'lg';\n  color?: string;\n  readOnly?: boolean;\n  onChange?: (rating: number) => void;\n  className?: string;\n}\n\n/**\n * Star rating component for displaying and selecting ratings\n */\nexport const StarRating: React.FC<StarRatingProps> = ({\n  rating = 0,\n  maxRating = 5,\n  size = 'md',\n  color = 'text-yellow-400',\n  readOnly = false,\n  onChange,\n  className = '',\n}) => {\n  const [hoverRating, setHoverRating] = useState<number>(0);\n  \n  // Size classes\n  const sizeClasses = {\n    sm: 'h-4 w-4',\n    md: 'h-5 w-5',\n    lg: 'h-6 w-6',\n  };\n  \n  // Handle mouse enter on star\n  const handleMouseEnter = (index: number): void => {\n    if (!readOnly) {\n      setHoverRating(index);\n    }\n  };\n  \n  // Handle mouse leave on star container\n  const handleMouseLeave = (): void => {\n    if (!readOnly) {\n      setHoverRating(0);\n    }\n  };\n  \n  // Handle click on star\n  const handleClick = (index: number): void => {\n    if (!readOnly && onChange) {\n      onChange(index);\n    }\n  };\n  \n  // Render stars\n  const renderStars = (): JSX.Element[] => {\n    return Array.from({ length: maxRating }, (_, i) => {\n      const starIndex = i + 1;\n      const isFilled = hoverRating ? starIndex <= hoverRating : starIndex <= rating;\n      \n      return (\n        <span\n          key={i}\n          className={`${readOnly ? '' : 'cursor-pointer'}`}\n          onMouseEnter={() => handleMouseEnter(starIndex)}\n          onClick={() => handleClick(starIndex)}\n          role={readOnly ? undefined : 'button'}\n          tabIndex={readOnly ? undefined : 0}\n          aria-label={readOnly ? `Rating: ${starIndex} of ${maxRating}` : `Rate ${starIndex} of ${maxRating}`}\n        >\n          {isFilled ? (\n            <svg\n              className={`${sizeClasses[size]} ${color}`}\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n              aria-hidden=\"true\"\n            >\n              <path\n                d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\"\n              />\n            </svg>\n          ) : (\n            <svg\n              className={`${sizeClasses[size]} text-gray-300`}\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              aria-hidden=\"true\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\"\n              />\n            </svg>\n          )}\n        </span>\n      );\n    });\n  };\n  \n  return (\n    <div\n      className={`flex ${className}`}\n      onMouseLeave={handleMouseLeave}\n      aria-label={`Rating: ${rating} out of ${maxRating}`}\n    >\n      {renderStars()}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { Layout } from '../../components/layout/layout.tsx';\nimport { Container } from '../../components/layout/container.tsx';\nimport { Spinner } from '../../components/ui/spinner.tsx';\nimport { Alert } from '../../components/ui/alert.tsx';\nimport { Pagination } from '../../components/ui/pagination.tsx';\nimport { StarRating } from '../../components/ui/star-rating.tsx';\nimport { useAuth } from '../../context/auth-context.tsx';\nimport { AdminService } from '../../services/admin-service.ts';\n\ninterface ReviewForModeration {\n  id: string;\n  content: string;\n  rating: number;\n  createdAt: string;\n  reportCount: number;\n  book: {\n    id: string;\n    title: string;\n  };\n  user: {\n    id: string;\n    displayName: string;\n  };\n}\n\n/**\n * Admin review management page component\n */\nexport const AdminReviewsPage: React.FC = () => {\n  const { isAdmin } = useAuth();\n  const queryClient = useQueryClient();\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [selectedReview, setSelectedReview] = useState<ReviewForModeration | null>(null);\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n  const reviewsPerPage = 10;\n\n  // Fetch reviews that need moderation\n  const {\n    data: reviewsData,\n    isLoading,\n    error,\n  } = useQuery(\n    ['adminReviews', currentPage],\n    () => AdminService.getReviewsForModeration((currentPage - 1) * reviewsPerPage, reviewsPerPage),\n    {\n      keepPreviousData: true,\n      staleTime: 5 * 60 * 1000, // 5 minutes\n      enabled: isAdmin,\n    }\n  );\n\n  // Approve review mutation\n  const approveReviewMutation = useMutation(\n    (id: string) => AdminService.approveReview(id),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(['adminReviews']);\n        setIsModalOpen(false);\n        setSelectedReview(null);\n      },\n      onError: (err: any) => {\n        alert(err?.message || 'Failed to approve review. Please try again.');\n      },\n    }\n  );\n\n  // Reject review mutation\n  const rejectReviewMutation = useMutation(\n    (id: string) => AdminService.rejectReview(id),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(['adminReviews']);\n        setIsModalOpen(false);\n        setSelectedReview(null);\n      },\n      onError: (err: any) => {\n        alert(err?.message || 'Failed to reject review. Please try again.');\n      },\n    }\n  );\n\n  // Handle page change\n  const handlePageChange = (page: number): void => {\n    setCurrentPage(page);\n  };\n\n  // Open modal to view review details\n  const handleViewReview = (review: ReviewForModeration): void => {\n    setSelectedReview(review);\n    setIsModalOpen(true);\n  };\n\n  // Handle approve review\n  const handleApproveReview = (id: string): void => {\n    approveReviewMutation.mutate(id);\n  };\n\n  // Handle reject review\n  const handleRejectReview = (id: string): void => {\n    if (window.confirm('Are you sure you want to reject this review? This action cannot be undone.')) {\n      rejectReviewMutation.mutate(id);\n    }\n  };\n\n  // Format date for display\n  const formatDate = (dateString: string): string => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n    });\n  };\n\n  if (!isAdmin) {\n    return (\n      <Layout>\n        <Container className=\"py-12\">\n          <Alert type=\"error\">\n            You do not have permission to access this page.\n          </Alert>\n        </Container>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout>\n      <Container className=\"py-8\">\n        <h1 className=\"text-3xl font-bold tracking-tight text-gray-900\">Review Management</h1>\n        <p className=\"mt-2 text-lg text-gray-600\">\n          Moderate reviews and manage reported content.\n        </p>\n\n        {/* Reviews table */}\n        <div className=\"mt-8 flex flex-col\">\n          <div className=\"-my-2 -mx-4 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n            <div className=\"inline-block min-w-full py-2 align-middle md:px-6 lg:px-8\">\n              <div className=\"overflow-hidden shadow ring-1 ring-black ring-opacity-5 md:rounded-lg\">\n                {isLoading ? (\n                  <div className=\"flex justify-center py-12\">\n                    <Spinner size=\"lg\" />\n                  </div>\n                ) : error ? (\n                  <div className=\"p-6\">\n                    <Alert type=\"error\">Failed to load reviews. Please try again later.</Alert>\n                  </div>\n                ) : reviewsData && reviewsData.reviews.length > 0 ? (\n                  <table className=\"min-w-full divide-y divide-gray-300\">\n                    <thead className=\"bg-gray-50\">\n                      <tr>\n                        <th\n                          scope=\"col\"\n                          className=\"py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6\"\n                        >\n                          Book\n                        </th>\n                        <th\n                          scope=\"col\"\n                          className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\"\n                        >\n                          User\n                        </th>\n                        <th\n                          scope=\"col\"\n                          className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\"\n                        >\n                          Rating\n                        </th>\n                        <th\n                          scope=\"col\"\n                          className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\"\n                        >\n                          Date\n                        </th>\n                        <th\n                          scope=\"col\"\n                          className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\"\n                        >\n                          Reports\n                        </th>\n                        <th\n                          scope=\"col\"\n                          className=\"relative py-3.5 pl-3 pr-4 sm:pr-6\"\n                        >\n                          <span className=\"sr-only\">Actions</span>\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"divide-y divide-gray-200 bg-white\">\n                      {reviewsData.reviews.map((review) => (\n                        <tr key={review.id}>\n                          <td className=\"whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 sm:pl-6\">\n                            {review.book.title}\n                          </td>\n                          <td className=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500\">\n                            {review.user.displayName}\n                          </td>\n                          <td className=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500\">\n                            <StarRating rating={review.rating} readOnly size=\"sm\" />\n                          </td>\n                          <td className=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500\">\n                            {formatDate(review.createdAt)}\n                          </td>\n                          <td className=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500\">\n                            <span className={`inline-flex rounded-full px-2 text-xs font-semibold leading-5 ${\n                              review.reportCount > 5 \n                                ? 'bg-red-100 text-red-800' \n                                : review.reportCount > 2\n                                ? 'bg-yellow-100 text-yellow-800'\n                                : 'bg-green-100 text-green-800'\n                            }`}>\n                              {review.reportCount}\n                            </span>\n                          </td>\n                          <td className=\"relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6\">\n                            <button\n                              onClick={() => handleViewReview(review)}\n                              className=\"text-primary-600 hover:text-primary-900 mr-4\"\n                            >\n                              View\n                            </button>\n                            <button\n                              onClick={() => handleApproveReview(review.id)}\n                              className=\"text-green-600 hover:text-green-900 mr-4\"\n                            >\n                              Approve\n                            </button>\n                            <button\n                              onClick={() => handleRejectReview(review.id)}\n                              className=\"text-red-600 hover:text-red-900\"\n                            >\n                              Reject\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                ) : (\n                  <div className=\"p-6 text-center text-gray-500\">\n                    No reviews requiring moderation at this time.\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Pagination */}\n        {reviewsData && reviewsData.total > reviewsPerPage && (\n          <div className=\"mt-6 flex justify-center\">\n            <Pagination\n              currentPage={currentPage}\n              totalPages={Math.ceil(reviewsData.total / reviewsPerPage)}\n              onPageChange={handlePageChange}\n            />\n          </div>\n        )}\n\n        {/* Review detail modal */}\n        {isModalOpen && selectedReview && (\n          <div className=\"fixed inset-0 z-10 overflow-y-auto\">\n            <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n              <div\n                className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"\n                onClick={() => setIsModalOpen(false)}\n              ></div>\n\n              <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n                &#8203;\n              </span>\n\n              <div className=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6\">\n                <div className=\"sm:flex sm:items-start\">\n                  <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left w-full\">\n                    <h3 className=\"text-lg leading-6 font-medium text-gray-900\">\n                      Review Details\n                    </h3>\n\n                    <div className=\"mt-4\">\n                      <div className=\"mb-4\">\n                        <h4 className=\"text-sm font-medium text-gray-500\">Book</h4>\n                        <p className=\"mt-1 text-sm text-gray-900\">{selectedReview.book.title}</p>\n                      </div>\n\n                      <div className=\"mb-4\">\n                        <h4 className=\"text-sm font-medium text-gray-500\">User</h4>\n                        <p className=\"mt-1 text-sm text-gray-900\">{selectedReview.user.displayName}</p>\n                      </div>\n\n                      <div className=\"mb-4\">\n                        <h4 className=\"text-sm font-medium text-gray-500\">Rating</h4>\n                        <div className=\"mt-1\">\n                          <StarRating rating={selectedReview.rating} readOnly />\n                        </div>\n                      </div>\n\n                      <div className=\"mb-4\">\n                        <h4 className=\"text-sm font-medium text-gray-500\">Date</h4>\n                        <p className=\"mt-1 text-sm text-gray-900\">{formatDate(selectedReview.createdAt)}</p>\n                      </div>\n\n                      <div className=\"mb-4\">\n                        <h4 className=\"text-sm font-medium text-gray-500\">Content</h4>\n                        <p className=\"mt-1 text-sm text-gray-900 whitespace-pre-wrap\">{selectedReview.content}</p>\n                      </div>\n\n                      <div className=\"mb-4\">\n                        <h4 className=\"text-sm font-medium text-gray-500\">Report Count</h4>\n                        <p className=\"mt-1 text-sm text-gray-900\">{selectedReview.reportCount}</p>\n                      </div>\n                    </div>\n\n                    <div className=\"mt-5 sm:mt-4 sm:flex sm:flex-row-reverse\">\n                      <button\n                        type=\"button\"\n                        onClick={() => handleApproveReview(selectedReview.id)}\n                        disabled={approveReviewMutation.isLoading}\n                        className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-green-600 text-base font-medium text-white hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 sm:ml-3 sm:w-auto sm:text-sm disabled:opacity-50 disabled:cursor-not-allowed\"\n                      >\n                        {approveReviewMutation.isLoading ? (\n                          <>\n                            <Spinner size=\"sm\" color=\"text-white\" className=\"mr-2\" />\n                            Approving...\n                          </>\n                        ) : 'Approve'}\n                      </button>\n                      <button\n                        type=\"button\"\n                        onClick={() => handleRejectReview(selectedReview.id)}\n                        disabled={rejectReviewMutation.isLoading}\n                        className=\"mt-3 w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm disabled:opacity-50 disabled:cursor-not-allowed\"\n                      >\n                        {rejectReviewMutation.isLoading ? (\n                          <>\n                            <Spinner size=\"sm\" color=\"text-white\" className=\"mr-2\" />\n                            Rejecting...\n                          </>\n                        ) : 'Reject'}\n                      </button>\n                      <button\n                        type=\"button\"\n                        onClick={() => setIsModalOpen(false)}\n                        className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 sm:mt-0 sm:w-auto sm:text-sm\"\n                      >\n                        Close\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </Container>\n    </Layout>\n  );\n};\n","import api from './api.ts';\nimport { User } from '../types';\n\ninterface UsersResponse {\n  users: User[];\n  total: number;\n}\n\ninterface UpdateUserData {\n  displayName?: string;\n  role?: 'user' | 'admin';\n}\n\n/**\n * Service for handling admin-related API calls\n */\nexport const AdminService = {\n  /**\n   * Get all users with pagination\n   */\n  getUsers: async (skip = 0, take = 10): Promise<UsersResponse> => {\n    return api.get<UsersResponse>(`/admin/users?skip=${skip}&take=${take}`);\n  },\n\n  /**\n   * Get user by ID\n   */\n  getUserById: async (id: string): Promise<User> => {\n    return api.get<User>(`/admin/users/${id}`);\n  },\n\n  /**\n   * Update user\n   */\n  updateUser: async (id: string, data: UpdateUserData): Promise<User> => {\n    return api.patch<User>(`/admin/users/${id}`, data);\n  },\n\n  /**\n   * Delete user\n   */\n  deleteUser: async (id: string): Promise<void> => {\n    return api.delete<void>(`/admin/users/${id}`);\n  },\n\n  /**\n   * Get admin dashboard statistics\n   */\n  getDashboardStats: async (): Promise<{\n    totalBooks: number;\n    totalUsers: number;\n    totalReviews: number;\n    recentActivity: Array<{\n      id: string;\n      type: 'book' | 'user' | 'review';\n      action: string;\n      details: string;\n      timestamp: string;\n    }>;\n  }> => {\n    return api.get<{\n      totalBooks: number;\n      totalUsers: number;\n      totalReviews: number;\n      recentActivity: Array<{\n        id: string;\n        type: 'book' | 'user' | 'review';\n        action: string;\n        details: string;\n        timestamp: string;\n      }>;\n    }>('/admin/dashboard/stats');\n  },\n\n  /**\n   * Get reviews that need moderation\n   */\n  getReviewsForModeration: async (skip = 0, take = 10): Promise<{\n    reviews: Array<{\n      id: string;\n      content: string;\n      rating: number;\n      createdAt: string;\n      reportCount: number;\n      book: {\n        id: string;\n        title: string;\n      };\n      user: {\n        id: string;\n        displayName: string;\n      };\n    }>;\n    total: number;\n  }> => {\n    return api.get<{\n      reviews: Array<{\n        id: string;\n        content: string;\n        rating: number;\n        createdAt: string;\n        reportCount: number;\n        book: {\n          id: string;\n          title: string;\n        };\n        user: {\n          id: string;\n          displayName: string;\n        };\n      }>;\n      total: number;\n    }>(`/admin/reviews/moderation?skip=${skip}&take=${take}`);\n  },\n\n  /**\n   * Approve a review\n   */\n  approveReview: async (id: string): Promise<void> => {\n    return api.post<void>(`/admin/reviews/${id}/approve`);\n  },\n\n  /**\n   * Reject a review\n   */\n  rejectReview: async (id: string): Promise<void> => {\n    return api.post<void>(`/admin/reviews/${id}/reject`);\n  },\n};\n","import React from 'react';\n\nexport interface PaginationProps {\n  currentPage: number;\n  totalPages: number;\n  onPageChange: (page: number) => void;\n  className?: string;\n}\n\n/**\n * Pagination component for navigating through pages of content\n */\nexport const Pagination: React.FC<PaginationProps> = ({\n  currentPage,\n  totalPages,\n  onPageChange,\n  className = '',\n}) => {\n  // Don't render pagination if there's only one page\n  if (totalPages <= 1) {\n    return null;\n  }\n\n  // Calculate page numbers to display\n  const getPageNumbers = (): number[] => {\n    const pages: number[] = [];\n    \n    // Always show first page\n    pages.push(1);\n    \n    // Calculate range around current page\n    const rangeStart = Math.max(2, currentPage - 1);\n    const rangeEnd = Math.min(totalPages - 1, currentPage + 1);\n    \n    // Add ellipsis after first page if needed\n    if (rangeStart > 2) {\n      pages.push(-1); // -1 represents ellipsis\n    }\n    \n    // Add pages in range\n    for (let i = rangeStart; i <= rangeEnd; i++) {\n      pages.push(i);\n    }\n    \n    // Add ellipsis before last page if needed\n    if (rangeEnd < totalPages - 1) {\n      pages.push(-2); // -2 represents ellipsis (different key from first ellipsis)\n    }\n    \n    // Always show last page if more than one page\n    if (totalPages > 1) {\n      pages.push(totalPages);\n    }\n    \n    return pages;\n  };\n\n  return (\n    <nav\n      className={`flex items-center justify-between border-t border-gray-200 px-4 sm:px-0 py-3 ${className}`}\n      aria-label=\"Pagination\"\n    >\n      <div className=\"hidden sm:block\">\n        <p className=\"text-sm text-gray-700\">\n          Showing page <span className=\"font-medium\">{currentPage}</span> of{' '}\n          <span className=\"font-medium\">{totalPages}</span>\n        </p>\n      </div>\n      <div className=\"flex flex-1 justify-between sm:justify-end\">\n        <button\n          onClick={() => onPageChange(currentPage - 1)}\n          disabled={currentPage === 1}\n          className=\"relative inline-flex items-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0 disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          Previous\n        </button>\n        <div className=\"hidden sm:flex sm:items-center\">\n          <div className=\"flex items-center space-x-1\">\n            {getPageNumbers().map((page, index) => {\n              // Render ellipsis\n              if (page < 0) {\n                return (\n                  <span\n                    key={page}\n                    className=\"relative inline-flex items-center px-4 py-2 text-sm font-semibold text-gray-700\"\n                  >\n                    ...\n                  </span>\n                );\n              }\n              \n              // Render page number\n              return (\n                <button\n                  key={page}\n                  onClick={() => onPageChange(page)}\n                  className={`relative inline-flex items-center px-4 py-2 text-sm font-semibold ${\n                    page === currentPage\n                      ? 'bg-primary-600 text-white focus:z-20 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary-600'\n                      : 'text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0'\n                  }`}\n                  aria-current={page === currentPage ? 'page' : undefined}\n                >\n                  {page}\n                </button>\n              );\n            })}\n          </div>\n        </div>\n        <button\n          onClick={() => onPageChange(currentPage + 1)}\n          disabled={currentPage === totalPages}\n          className=\"relative ml-3 inline-flex items-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0 disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          Next\n        </button>\n      </div>\n    </nav>\n  );\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n"],"names":["React","require","objectIs","Object","is","x","y","useState","useEffect","useLayoutEffect","useDebugValue","checkIfSnapshotChanged","inst","latestGetSnapshot","getSnapshot","value","nextValue","error","shim","window","document","createElement","subscribe","_useState","forceUpdate","exports","useSyncExternalStore","StarRating","_ref","rating","maxRating","size","color","readOnly","onChange","className","hoverRating","setHoverRating","sizeClasses","sm","md","lg","_jsx","concat","onMouseLeave","handleMouseLeave","children","Array","from","length","_","i","starIndex","isFilled","onMouseEnter","handleMouseEnter","index","onClick","handleClick","role","undefined","tabIndex","xmlns","viewBox","fill","d","stroke","strokeLinecap","strokeLinejoin","strokeWidth","AdminReviewsPage","isAdmin","useAuth","queryClient","useQueryClient","currentPage","setCurrentPage","selectedReview","setSelectedReview","isModalOpen","setIsModalOpen","data","reviewsData","isLoading","useQuery","AdminService","getReviewsForModeration","keepPreviousData","staleTime","enabled","approveReviewMutation","useMutation","id","approveReview","onSuccess","invalidateQueries","onError","err","alert","message","rejectReviewMutation","rejectReview","handleApproveReview","mutate","handleRejectReview","confirm","formatDate","dateString","Date","toLocaleDateString","year","month","day","Layout","_jsxs","Container","Spinner","Alert","type","reviews","scope","map","review","book","title","user","displayName","createdAt","reportCount","handleViewReview","total","Pagination","totalPages","Math","ceil","onPageChange","page","content","disabled","_Fragment","getUsers","async","skip","arguments","take","api","get","getUserById","updateUser","patch","deleteUser","delete","getDashboardStats","post","getPageNumbers","pages","push","rangeStart","max","rangeEnd","min","module"],"sourceRoot":""}