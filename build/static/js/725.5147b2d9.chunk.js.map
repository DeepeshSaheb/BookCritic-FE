{"version":3,"file":"static/js/725.5147b2d9.chunk.js","mappings":";+GAWA,IAAIA,EAAQC,EAAQ,MAIpB,IAAIC,EAAW,oBAAsBC,OAAOC,GAAKD,OAAOC,GAHxD,SAAYC,EAAGC,GACb,OAAQD,IAAMC,IAAM,IAAMD,GAAK,EAAIA,IAAM,EAAIC,IAAQD,IAAMA,GAAKC,IAAMA,CACxE,EAEEC,EAAWP,EAAMO,SACjBC,EAAYR,EAAMQ,UAClBC,EAAkBT,EAAMS,gBACxBC,EAAgBV,EAAMU,cA0BxB,SAASC,EAAuBC,GAC9B,IAAIC,EAAoBD,EAAKE,YAC7BF,EAAOA,EAAKG,MACZ,IACE,IAAIC,EAAYH,IAChB,OAAQX,EAASU,EAAMI,EACzB,CAAE,MAAOC,GACP,OAAO,CACT,CACF,CAIA,IAAIC,EACF,qBAAuBC,QACvB,qBAAuBA,OAAOC,UAC9B,qBAAuBD,OAAOC,SAASC,cANzC,SAAgCC,EAAWR,GACzC,OAAOA,GACT,EArCA,SAAgCQ,EAAWR,GACzC,IAAIC,EAAQD,IACVS,EAAYhB,EAAS,CAAEK,KAAM,CAAEG,MAAOA,EAAOD,YAAaA,KAC1DF,EAAOW,EAAU,GAAGX,KACpBY,EAAcD,EAAU,GAmB1B,OAlBAd,EACE,WACEG,EAAKG,MAAQA,EACbH,EAAKE,YAAcA,EACnBH,EAAuBC,IAASY,EAAY,CAAEZ,KAAMA,GACtD,EACA,CAACU,EAAWP,EAAOD,IAErBN,EACE,WAEE,OADAG,EAAuBC,IAASY,EAAY,CAAEZ,KAAMA,IAC7CU,EAAU,WACfX,EAAuBC,IAASY,EAAY,CAAEZ,KAAMA,GACtD,EACF,EACA,CAACU,IAEHZ,EAAcK,GACPA,CACT,EAoBAU,EAAQC,0BACN,IAAW1B,EAAM0B,qBAAuB1B,EAAM0B,qBAAuBR,C,uLCxChE,MAAMS,EAA2BA,KACtC,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,KACdC,GAAcC,EAAAA,EAAAA,OACbC,EAAaC,IAAkB1B,EAAAA,EAAAA,UAAiB,IAChD2B,EAAaC,IAAkB5B,EAAAA,EAAAA,WAAkB,IACjD6B,EAAcC,IAAmB9B,EAAAA,EAAAA,UAAsB,OACvD+B,EAAUC,IAAehC,EAAAA,EAAAA,UAAuB,CACrDiC,MAAO,GACPC,OAAQ,GACRC,KAAM,GACNC,YAAa,GACbC,cAAe,GACfC,cAAe,GACfC,OAAQ,MAEHC,EAAWC,IAAgBzC,EAAAA,EAAAA,UAAiB,KAKjD0C,KAAMC,EAAS,UACfC,EAAS,MACTlC,IACEmC,EAAAA,EAAAA,GACF,CAAC,aAAcpB,GACf,IAAMqB,EAAAA,EAAYC,SATC,IASStB,EAAc,GATvB,IAUnB,CACEuB,kBAAkB,EAClBC,UAAW,MAKTC,GAAqBC,EAAAA,EAAAA,GACxBT,GAAmCI,EAAAA,EAAYM,WAAWV,GAC3D,CACEW,UAAWA,KACT9B,EAAY+B,kBAAkB,CAAC,eAC/BC,IACA3B,GAAe,IAEjB4B,QAAUC,IACRhB,GAAgB,OAAHgB,QAAG,IAAHA,OAAG,EAAHA,EAAKC,UAAW,+CAM7BC,GAAqBR,EAAAA,EAAAA,GACxBT,GAAuBI,EAAAA,EAAYc,WAAWlB,EAAKmB,GAAKnB,GACzD,CACEW,UAAWA,KACT9B,EAAY+B,kBAAkB,CAAC,eAC/BC,IACA3B,GAAe,IAEjB4B,QAAUC,IACRhB,GAAgB,OAAHgB,QAAG,IAAHA,OAAG,EAAHA,EAAKC,UAAW,+CAM7BI,GAAqBX,EAAAA,EAAAA,GACxBU,GAAef,EAAAA,EAAYiB,WAAWF,GACvC,CACER,UAAWA,KACT9B,EAAY+B,kBAAkB,CAAC,gBAEjCE,QAAUC,IACRO,OAAS,OAAHP,QAAG,IAAHA,OAAG,EAAHA,EAAKC,UAAW,+CAWtBH,EAAYA,KAChBvB,EAAY,CACVC,MAAO,GACPC,OAAQ,GACRC,KAAM,GACNC,YAAa,GACbC,cAAe,GACfC,cAAe,GACfC,OAAQ,KAEVT,EAAgB,MAChBW,EAAa,KAiCTwB,EAAqBC,IACzB,MAAM,KAAEC,EAAI,MAAE3D,GAAU0D,EAAEE,OAC1BpC,EAAaqC,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACZD,GAAI,IACP,CAACF,GAAO3D,MAuCN+D,EAAcC,GACbA,EACE,IAAIC,KAAKD,GAAYE,cAAcC,MAAM,KAAK,GAD7B,GAI1B,OAAKtD,GAaHuD,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAAAC,UACLC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,UAAU,OAAMH,SAAA,EACzBC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oCAAmCH,SAAA,EAChDF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,kDAAiDH,SAAC,qBAChEF,EAAAA,EAAAA,KAAA,UACEM,KAAK,SACLC,QAhGYC,KACpB7B,IACA3B,GAAe,IA+FPqD,UAAU,kOAAiOH,SAC5O,qBAMHF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,qBAAoBH,UACjCF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,gDAA+CH,UAC5DF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,4DAA2DH,UACxEF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,wEAAuEH,SACnFlC,GACCgC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,4BAA2BH,UACxCF,EAAAA,EAAAA,KAACS,EAAAA,EAAO,CAACC,KAAK,SAEd5E,GACFkE,EAAAA,EAAAA,KAAA,OAAKK,UAAU,MAAKH,UAClBF,EAAAA,EAAAA,KAACW,EAAAA,EAAK,CAACL,KAAK,QAAOJ,SAAC,oDAEpBnC,GAAaA,EAAU6C,MAAMC,OAAS,GACxCV,EAAAA,EAAAA,MAAA,SAAOE,UAAU,sCAAqCH,SAAA,EACpDF,EAAAA,EAAAA,KAAA,SAAOK,UAAU,aAAYH,UAC3BC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MACEc,MAAM,MACNT,UAAU,yEAAwEH,SACnF,WAGDF,EAAAA,EAAAA,KAAA,MACEc,MAAM,MACNT,UAAU,4DAA2DH,SACtE,YAGDF,EAAAA,EAAAA,KAAA,MACEc,MAAM,MACNT,UAAU,4DAA2DH,SACtE,UAGDF,EAAAA,EAAAA,KAAA,MACEc,MAAM,MACNT,UAAU,4DAA2DH,SACtE,oBAGDF,EAAAA,EAAAA,KAAA,MACEc,MAAM,MACNT,UAAU,4DAA2DH,SACtE,YAGDF,EAAAA,EAAAA,KAAA,MACEc,MAAM,MACNT,UAAU,oCAAmCH,UAE7CF,EAAAA,EAAAA,KAAA,QAAMK,UAAU,UAASH,SAAC,oBAIhCF,EAAAA,EAAAA,KAAA,SAAOK,UAAU,oCAAmCH,SACjDnC,EAAU6C,MAAMG,IAAKC,IAAI,IAAAC,EAAA,OACxBd,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,6EAA4EH,SACvFc,EAAK3D,SAER2C,EAAAA,EAAAA,KAAA,MAAIK,UAAU,oDAAmDH,SAC9Dc,EAAK1D,UAER0C,EAAAA,EAAAA,KAAA,MAAIK,UAAU,oDAAmDH,SAC9Dc,EAAKzD,MAAQ,OAEhByC,EAAAA,EAAAA,KAAA,MAAIK,UAAU,oDAAmDH,SAC9Dc,EAAKvD,cAAgBkC,EAAWqB,EAAKvD,eAAiB,OAEzD0C,EAAAA,EAAAA,MAAA,MAAIE,UAAU,oDAAmDH,SAAA,EAC5C,QAAlBe,EAAAD,EAAKE,qBAAa,IAAAD,OAAA,EAAlBA,EAAoBE,QAAQ,KAAM,IAAI,KAAGH,EAAKI,cAAgB,EAAE,QAEnEjB,EAAAA,EAAAA,MAAA,MAAIE,UAAU,mFAAkFH,SAAA,EAC9FF,EAAAA,EAAAA,KAAA,UACEO,QAASA,IA5KbS,KACtB9D,EAAgB8D,GAChB5D,EAAY,CACV6B,GAAI+B,EAAK/B,GACT5B,MAAO2D,EAAK3D,MACZC,OAAQ0D,EAAK1D,OACbC,KAAMyD,EAAKzD,MAAQ,GACnBC,YAAawD,EAAKxD,aAAe,GACjCC,cAAeuD,EAAKvD,eAAiB,GACrCC,cAAesD,EAAKtD,eAAiB,GACrCC,OAAQqD,EAAKrD,QAAU,KAEzBX,GAAe,IAgK0BqE,CAAeL,GAC9BX,UAAU,+CAA8CH,SACzD,UAGDF,EAAAA,EAAAA,KAAA,UACEO,QAASA,KAAMe,OAlKjBrC,EAkKkC+B,EAAK/B,QAjK3DjD,OAAOuF,QAAQ,6EACjBrC,EAAmBsC,OAAOvC,IAFJA,OAmKEoB,UAAU,kCAAiCH,SAC5C,gBA1BIc,EAAK/B,YAmCpBe,EAAAA,EAAAA,KAAA,OAAKK,UAAU,gCAA+BH,SAAC,2DAUxDnC,GAAaA,EAAU0D,MA7RT,KA8RbzB,EAAAA,EAAAA,KAAA,OAAKK,UAAU,2BAA0BH,UACvCF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CACT7E,YAAaA,EACb8E,WAAYC,KAAKC,KAAK9D,EAAU0D,MAjSvB,IAkSTK,aAtOcC,IACxBjF,EAAeiF,QA2OVhF,IACCiD,EAAAA,EAAAA,KAAA,OAAKK,UAAU,qCAAoCH,UACjDC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,yFAAwFH,SAAA,EACrGF,EAAAA,EAAAA,KAAA,OACEK,UAAU,6DACVE,QAASA,IAAMvD,GAAe,MAGhCgD,EAAAA,EAAAA,KAAA,QAAMK,UAAU,qDAAqD,cAAY,OAAMH,SAAC,YAIxFF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,iLAAgLH,UAC7LF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,yBAAwBH,UACrCC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,uDAAsDH,SAAA,EACnEF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,8CAA6CH,SACxDjD,EAAe,YAAc,iBAG/BW,IACCoC,EAAAA,EAAAA,KAACW,EAAAA,EAAK,CAACL,KAAK,QAAQD,UAAU,OAAO2B,QAASA,IAAMnE,EAAa,IAAIqC,SAClEtC,KAILuC,EAAAA,EAAAA,MAAA,QAAM8B,SAlMF3C,IACpBA,EAAE4C,iBACFrE,EAAa,IAGRV,EAASE,MAAM8E,OAKfhF,EAASG,OAAO6E,OAKjBlF,EAEF8B,EAAmByC,OAAOrE,GAG1BmB,EAAmBkD,OAAOrE,GAT1BU,EAAa,sBALbA,EAAa,sBA4L+BwC,UAAU,iBAAgBH,SAAA,EACtDC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOoC,QAAQ,QAAQ/B,UAAU,0CAAyCH,SAAC,aAG3EF,EAAAA,EAAAA,KAAA,SACEM,KAAK,OACLf,KAAK,QACLN,GAAG,QACHrD,MAAOuB,EAASE,MAChBgF,SAAUhD,EACViD,UAAQ,EACRjC,UAAU,8JAIdF,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOoC,QAAQ,SAAS/B,UAAU,0CAAyCH,SAAC,cAG5EF,EAAAA,EAAAA,KAAA,SACEM,KAAK,OACLf,KAAK,SACLN,GAAG,SACHrD,MAAOuB,EAASG,OAChB+E,SAAUhD,EACViD,UAAQ,EACRjC,UAAU,8JAIdF,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOoC,QAAQ,OAAO/B,UAAU,0CAAyCH,SAAC,UAG1EF,EAAAA,EAAAA,KAAA,SACEM,KAAK,OACLf,KAAK,OACLN,GAAG,OACHrD,MAAOuB,EAASI,KAChB8E,SAAUhD,EACVgB,UAAU,8JAIdF,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOoC,QAAQ,gBAAgB/B,UAAU,0CAAyCH,SAAC,oBAGnFF,EAAAA,EAAAA,KAAA,SACEM,KAAK,OACLf,KAAK,gBACLN,GAAG,gBACHrD,MAAOuB,EAASM,cAAgBkC,EAAWxC,EAASM,eAAiB,GACrE4E,SAAUhD,EACVgB,UAAU,8JAIdF,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOoC,QAAQ,gBAAgB/B,UAAU,0CAAyCH,SAAC,qBAGnFF,EAAAA,EAAAA,KAAA,SACEM,KAAK,MACLf,KAAK,gBACLN,GAAG,gBACHrD,MAAOuB,EAASO,cAChB2E,SAAUhD,EACVgB,UAAU,8JAIdF,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOoC,QAAQ,SAAS/B,UAAU,0CAAyCH,SAAC,8BAG5EF,EAAAA,EAAAA,KAAA,SACEM,KAAK,OACLf,KAAK,SACLN,GAAG,SACHrD,MAAOuB,EAASQ,OAAO4E,KAAK,MAC5BF,SA7RI/C,IAC1B,MAAM3B,EAAS2B,EAAEE,OAAO5D,MAAMmE,MAAM,KAAKgB,IAAKyB,GAAUA,EAAML,QAC9D/E,EAAaqC,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACZD,GAAI,IACP9B,aA0RoB0C,UAAU,8JAIdF,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOoC,QAAQ,cAAc/B,UAAU,0CAAyCH,SAAC,iBAGjFF,EAAAA,EAAAA,KAAA,YACET,KAAK,cACLN,GAAG,cACHwD,KAAM,EACN7G,MAAOuB,EAASK,YAChB6E,SAAUhD,EACVgB,UAAU,8JAIdF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,2CAA0CH,SAAA,EACvDF,EAAAA,EAAAA,KAAA,UACEM,KAAK,SACLoC,SAAUpE,EAAmBN,WAAae,EAAmBf,UAC7DqC,UAAU,0TAAyTH,SAElU5B,EAAmBN,WAAae,EAAmBf,WAClDmC,EAAAA,EAAAA,MAAAwC,EAAAA,SAAA,CAAAzC,SAAA,EACEF,EAAAA,EAAAA,KAACS,EAAAA,EAAO,CAACC,KAAK,KAAKkC,MAAM,aAAavC,UAAU,SAC/CpD,EAAe,cAAgB,iBAGlCA,EAAe,SAAW,YAG9B+C,EAAAA,EAAAA,KAAA,UACEM,KAAK,SACLC,QAASA,IAAMvD,GAAe,GAC9BqD,UAAU,qQAAoQH,SAC/Q,mCA1RnBF,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAAAC,UACLF,EAAAA,EAAAA,KAACI,EAAAA,EAAS,CAACC,UAAU,QAAOH,UAC1BF,EAAAA,EAAAA,KAACW,EAAAA,EAAK,CAACL,KAAK,QAAOJ,SAAC,wD,uDC9LvB,MAAMwB,EAAwCmB,IAK9C,IAL+C,YACpDhG,EAAW,WACX8E,EAAU,aACVG,EAAY,UACZzB,EAAY,IACbwC,EAEC,GAAIlB,GAAc,EAChB,OAAO,KAqCT,OACExB,EAAAA,EAAAA,MAAA,OACEE,UAAS,gFAAAyC,OAAkFzC,GAC3F,aAAW,aAAYH,SAAA,EAEvBF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,kBAAiBH,UAC9BC,EAAAA,EAAAA,MAAA,KAAGE,UAAU,wBAAuBH,SAAA,CAAC,iBACtBF,EAAAA,EAAAA,KAAA,QAAMK,UAAU,cAAaH,SAAErD,IAAmB,MAAI,KACnEmD,EAAAA,EAAAA,KAAA,QAAMK,UAAU,cAAaH,SAAEyB,UAGnCxB,EAAAA,EAAAA,MAAA,OAAKE,UAAU,6CAA4CH,SAAA,EACzDF,EAAAA,EAAAA,KAAA,UACEO,QAASA,IAAMuB,EAAajF,EAAc,GAC1C6F,SAA0B,IAAhB7F,EACVwD,UAAU,yOAAwOH,SACnP,cAGDF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,iCAAgCH,UAC7CF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,8BAA6BH,SArD7B6C,MACrB,MAAMC,EAAkB,GAGxBA,EAAMC,KAAK,GAGX,MAAMC,EAAatB,KAAKuB,IAAI,EAAGtG,EAAc,GACvCuG,EAAWxB,KAAKyB,IAAI1B,EAAa,EAAG9E,EAAc,GAGpDqG,EAAa,GACfF,EAAMC,MAAM,GAId,IAAK,IAAIK,EAAIJ,EAAYI,GAAKF,EAAUE,IACtCN,EAAMC,KAAKK,GAab,OATIF,EAAWzB,EAAa,GAC1BqB,EAAMC,MAAM,GAIVtB,EAAa,GACfqB,EAAMC,KAAKtB,GAGNqB,GAwBED,GAAiBhC,IAAI,CAACgB,EAAMwB,IAEvBxB,EAAO,GAEP/B,EAAAA,EAAAA,KAAA,QAEEK,UAAU,kFAAiFH,SAC5F,OAFM6B,IAUT/B,EAAAA,EAAAA,KAAA,UAEEO,QAASA,IAAMuB,EAAaC,GAC5B1B,UAAS,qEAAAyC,OACPf,IAASlF,EACL,sJACA,oGAEN,eAAckF,IAASlF,EAAc,YAAS2G,EAAUtD,SAEvD6B,GATIA,SAef/B,EAAAA,EAAAA,KAAA,UACEO,QAASA,IAAMuB,EAAajF,EAAc,GAC1C6F,SAAU7F,IAAgB8E,EAC1BtB,UAAU,8OAA6OH,SACxP,e,iBC9GPuD,EAAOnH,QAAU,EAAjBmH,K","sources":["../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.js","pages/admin/books.tsx","components/ui/pagination.tsx","../node_modules/use-sync-external-store/shim/index.js"],"sourcesContent":["/**\n * @license React\n * use-sync-external-store-shim.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useState = React.useState,\n  useEffect = React.useEffect,\n  useLayoutEffect = React.useLayoutEffect,\n  useDebugValue = React.useDebugValue;\nfunction useSyncExternalStore$2(subscribe, getSnapshot) {\n  var value = getSnapshot(),\n    _useState = useState({ inst: { value: value, getSnapshot: getSnapshot } }),\n    inst = _useState[0].inst,\n    forceUpdate = _useState[1];\n  useLayoutEffect(\n    function () {\n      inst.value = value;\n      inst.getSnapshot = getSnapshot;\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n    },\n    [subscribe, value, getSnapshot]\n  );\n  useEffect(\n    function () {\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      return subscribe(function () {\n        checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      });\n    },\n    [subscribe]\n  );\n  useDebugValue(value);\n  return value;\n}\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  inst = inst.value;\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(inst, nextValue);\n  } catch (error) {\n    return !0;\n  }\n}\nfunction useSyncExternalStore$1(subscribe, getSnapshot) {\n  return getSnapshot();\n}\nvar shim =\n  \"undefined\" === typeof window ||\n  \"undefined\" === typeof window.document ||\n  \"undefined\" === typeof window.document.createElement\n    ? useSyncExternalStore$1\n    : useSyncExternalStore$2;\nexports.useSyncExternalStore =\n  void 0 !== React.useSyncExternalStore ? React.useSyncExternalStore : shim;\n","import React, { useState } from 'react';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { Layout } from '../../components/layout/layout.tsx';\nimport { Container } from '../../components/layout/container.tsx';\nimport { Spinner } from '../../components/ui/spinner.tsx';\nimport { Alert } from '../../components/ui/alert.tsx';\nimport { Pagination } from '../../components/ui/pagination.tsx';\nimport { useAuth } from '../../context/auth-context.tsx';\nimport { BookService } from '../../services/book-service.ts';\nimport { Book } from '../../types';\n\ninterface BookFormData {\n  id?: string;\n  title: string;\n  author: string;\n  isbn: string;\n  description: string;\n  publishedDate: string;\n  coverImageUrl: string;\n  genres: string[];\n}\n\n/**\n * Admin book management page component\n */\nexport const AdminBooksPage: React.FC = () => {\n  const { isAdmin } = useAuth();\n  const queryClient = useQueryClient();\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n  const [selectedBook, setSelectedBook] = useState<Book | null>(null);\n  const [formData, setFormData] = useState<BookFormData>({\n    title: '',\n    author: '',\n    isbn: '',\n    description: '',\n    publishedDate: '',\n    coverImageUrl: '',\n    genres: [],\n  });\n  const [formError, setFormError] = useState<string>('');\n  const booksPerPage = 10;\n\n  // Fetch books with pagination\n  const {\n    data: booksData,\n    isLoading,\n    error,\n  } = useQuery(\n    ['adminBooks', currentPage],\n    () => BookService.getBooks((currentPage - 1) * booksPerPage, booksPerPage),\n    {\n      keepPreviousData: true,\n      staleTime: 5 * 60 * 1000, // 5 minutes\n    }\n  );\n\n  // Create book mutation\n  const createBookMutation = useMutation(\n    (data: Omit<BookFormData, 'id'>) => BookService.createBook(data),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(['adminBooks']);\n        resetForm();\n        setIsModalOpen(false);\n      },\n      onError: (err: any) => {\n        setFormError(err?.message || 'Failed to create book. Please try again.');\n      },\n    }\n  );\n\n  // Update book mutation\n  const updateBookMutation = useMutation(\n    (data: BookFormData) => BookService.updateBook(data.id!, data),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(['adminBooks']);\n        resetForm();\n        setIsModalOpen(false);\n      },\n      onError: (err: any) => {\n        setFormError(err?.message || 'Failed to update book. Please try again.');\n      },\n    }\n  );\n\n  // Delete book mutation\n  const deleteBookMutation = useMutation(\n    (id: string) => BookService.deleteBook(id),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(['adminBooks']);\n      },\n      onError: (err: any) => {\n        alert(err?.message || 'Failed to delete book. Please try again.');\n      },\n    }\n  );\n\n  // Handle page change\n  const handlePageChange = (page: number): void => {\n    setCurrentPage(page);\n  };\n\n  // Reset form\n  const resetForm = (): void => {\n    setFormData({\n      title: '',\n      author: '',\n      isbn: '',\n      description: '',\n      publishedDate: '',\n      coverImageUrl: '',\n      genres: [],\n    });\n    setSelectedBook(null);\n    setFormError('');\n  };\n\n  // Open modal for creating a new book\n  const handleAddBook = (): void => {\n    resetForm();\n    setIsModalOpen(true);\n  };\n\n  // Open modal for editing a book\n  const handleEditBook = (book: Book): void => {\n    setSelectedBook(book);\n    setFormData({\n      id: book.id,\n      title: book.title,\n      author: book.author,\n      isbn: book.isbn || '',\n      description: book.description || '',\n      publishedDate: book.publishedDate || '',\n      coverImageUrl: book.coverImageUrl || '',\n      genres: book.genres || [],\n    });\n    setIsModalOpen(true);\n  };\n\n  // Handle delete book\n  const handleDeleteBook = (id: string): void => {\n    if (window.confirm('Are you sure you want to delete this book? This action cannot be undone.')) {\n      deleteBookMutation.mutate(id);\n    }\n  };\n\n  // Handle input change\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  // Handle genres change\n  const handleGenresChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const genres = e.target.value.split(',').map((genre) => genre.trim());\n    setFormData((prev) => ({\n      ...prev,\n      genres,\n    }));\n  };\n\n  // Handle form submission\n  const handleSubmit = (e: React.FormEvent): void => {\n    e.preventDefault();\n    setFormError('');\n\n    // Validate form\n    if (!formData.title.trim()) {\n      setFormError('Title is required');\n      return;\n    }\n\n    if (!formData.author.trim()) {\n      setFormError('Author is required');\n      return;\n    }\n\n    if (selectedBook) {\n      // Update existing book\n      updateBookMutation.mutate(formData);\n    } else {\n      // Create new book\n      createBookMutation.mutate(formData);\n    }\n  };\n\n  // Format date for display\n  const formatDate = (dateString?: string): string => {\n    if (!dateString) return '';\n    return new Date(dateString).toISOString().split('T')[0];\n  };\n\n  if (!isAdmin) {\n    return (\n      <Layout>\n        <Container className=\"py-12\">\n          <Alert type=\"error\">\n            You do not have permission to access this page.\n          </Alert>\n        </Container>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout>\n      <Container className=\"py-8\">\n        <div className=\"flex justify-between items-center\">\n          <h1 className=\"text-3xl font-bold tracking-tight text-gray-900\">Book Management</h1>\n          <button\n            type=\"button\"\n            onClick={handleAddBook}\n            className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n          >\n            Add New Book\n          </button>\n        </div>\n\n        {/* Books table */}\n        <div className=\"mt-8 flex flex-col\">\n          <div className=\"-my-2 -mx-4 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n            <div className=\"inline-block min-w-full py-2 align-middle md:px-6 lg:px-8\">\n              <div className=\"overflow-hidden shadow ring-1 ring-black ring-opacity-5 md:rounded-lg\">\n                {isLoading ? (\n                  <div className=\"flex justify-center py-12\">\n                    <Spinner size=\"lg\" />\n                  </div>\n                ) : error ? (\n                  <div className=\"p-6\">\n                    <Alert type=\"error\">Failed to load books. Please try again later.</Alert>\n                  </div>\n                ) : booksData && booksData.books.length > 0 ? (\n                  <table className=\"min-w-full divide-y divide-gray-300\">\n                    <thead className=\"bg-gray-50\">\n                      <tr>\n                        <th\n                          scope=\"col\"\n                          className=\"py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6\"\n                        >\n                          Title\n                        </th>\n                        <th\n                          scope=\"col\"\n                          className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\"\n                        >\n                          Author\n                        </th>\n                        <th\n                          scope=\"col\"\n                          className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\"\n                        >\n                          ISBN\n                        </th>\n                        <th\n                          scope=\"col\"\n                          className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\"\n                        >\n                          Published Date\n                        </th>\n                        <th\n                          scope=\"col\"\n                          className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\"\n                        >\n                          Rating\n                        </th>\n                        <th\n                          scope=\"col\"\n                          className=\"relative py-3.5 pl-3 pr-4 sm:pr-6\"\n                        >\n                          <span className=\"sr-only\">Actions</span>\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"divide-y divide-gray-200 bg-white\">\n                      {booksData.books.map((book) => (\n                        <tr key={book.id}>\n                          <td className=\"whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 sm:pl-6\">\n                            {book.title}\n                          </td>\n                          <td className=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500\">\n                            {book.author}\n                          </td>\n                          <td className=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500\">\n                            {book.isbn || '-'}\n                          </td>\n                          <td className=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500\">\n                            {book.publishedDate ? formatDate(book.publishedDate) : '-'}\n                          </td>\n                          <td className=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500\">\n                            {book.averageRating?.toFixed(1) || '-'} ({book.totalReviews || 0})\n                          </td>\n                          <td className=\"relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6\">\n                            <button\n                              onClick={() => handleEditBook(book)}\n                              className=\"text-primary-600 hover:text-primary-900 mr-4\"\n                            >\n                              Edit\n                            </button>\n                            <button\n                              onClick={() => handleDeleteBook(book.id)}\n                              className=\"text-red-600 hover:text-red-900\"\n                            >\n                              Delete\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                ) : (\n                  <div className=\"p-6 text-center text-gray-500\">\n                    No books found. Add a new book to get started.\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Pagination */}\n        {booksData && booksData.total > booksPerPage && (\n          <div className=\"mt-6 flex justify-center\">\n            <Pagination\n              currentPage={currentPage}\n              totalPages={Math.ceil(booksData.total / booksPerPage)}\n              onPageChange={handlePageChange}\n            />\n          </div>\n        )}\n\n        {/* Book form modal */}\n        {isModalOpen && (\n          <div className=\"fixed inset-0 z-10 overflow-y-auto\">\n            <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n              <div\n                className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"\n                onClick={() => setIsModalOpen(false)}\n              ></div>\n\n              <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n                &#8203;\n              </span>\n\n              <div className=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6\">\n                <div className=\"sm:flex sm:items-start\">\n                  <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left w-full\">\n                    <h3 className=\"text-lg leading-6 font-medium text-gray-900\">\n                      {selectedBook ? 'Edit Book' : 'Add New Book'}\n                    </h3>\n\n                    {formError && (\n                      <Alert type=\"error\" className=\"mt-4\" onClose={() => setFormError('')}>\n                        {formError}\n                      </Alert>\n                    )}\n\n                    <form onSubmit={handleSubmit} className=\"mt-6 space-y-4\">\n                      <div>\n                        <label htmlFor=\"title\" className=\"block text-sm font-medium text-gray-700\">\n                          Title *\n                        </label>\n                        <input\n                          type=\"text\"\n                          name=\"title\"\n                          id=\"title\"\n                          value={formData.title}\n                          onChange={handleInputChange}\n                          required\n                          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                        />\n                      </div>\n\n                      <div>\n                        <label htmlFor=\"author\" className=\"block text-sm font-medium text-gray-700\">\n                          Author *\n                        </label>\n                        <input\n                          type=\"text\"\n                          name=\"author\"\n                          id=\"author\"\n                          value={formData.author}\n                          onChange={handleInputChange}\n                          required\n                          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                        />\n                      </div>\n\n                      <div>\n                        <label htmlFor=\"isbn\" className=\"block text-sm font-medium text-gray-700\">\n                          ISBN\n                        </label>\n                        <input\n                          type=\"text\"\n                          name=\"isbn\"\n                          id=\"isbn\"\n                          value={formData.isbn}\n                          onChange={handleInputChange}\n                          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                        />\n                      </div>\n\n                      <div>\n                        <label htmlFor=\"publishedDate\" className=\"block text-sm font-medium text-gray-700\">\n                          Published Date\n                        </label>\n                        <input\n                          type=\"date\"\n                          name=\"publishedDate\"\n                          id=\"publishedDate\"\n                          value={formData.publishedDate ? formatDate(formData.publishedDate) : ''}\n                          onChange={handleInputChange}\n                          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                        />\n                      </div>\n\n                      <div>\n                        <label htmlFor=\"coverImageUrl\" className=\"block text-sm font-medium text-gray-700\">\n                          Cover Image URL\n                        </label>\n                        <input\n                          type=\"url\"\n                          name=\"coverImageUrl\"\n                          id=\"coverImageUrl\"\n                          value={formData.coverImageUrl}\n                          onChange={handleInputChange}\n                          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                        />\n                      </div>\n\n                      <div>\n                        <label htmlFor=\"genres\" className=\"block text-sm font-medium text-gray-700\">\n                          Genres (comma separated)\n                        </label>\n                        <input\n                          type=\"text\"\n                          name=\"genres\"\n                          id=\"genres\"\n                          value={formData.genres.join(', ')}\n                          onChange={handleGenresChange}\n                          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                        />\n                      </div>\n\n                      <div>\n                        <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700\">\n                          Description\n                        </label>\n                        <textarea\n                          name=\"description\"\n                          id=\"description\"\n                          rows={4}\n                          value={formData.description}\n                          onChange={handleInputChange}\n                          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                        />\n                      </div>\n\n                      <div className=\"mt-5 sm:mt-4 sm:flex sm:flex-row-reverse\">\n                        <button\n                          type=\"submit\"\n                          disabled={createBookMutation.isLoading || updateBookMutation.isLoading}\n                          className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-primary-600 text-base font-medium text-white hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 sm:ml-3 sm:w-auto sm:text-sm disabled:opacity-50 disabled:cursor-not-allowed\"\n                        >\n                          {createBookMutation.isLoading || updateBookMutation.isLoading ? (\n                            <>\n                              <Spinner size=\"sm\" color=\"text-white\" className=\"mr-2\" />\n                              {selectedBook ? 'Updating...' : 'Creating...'}\n                            </>\n                          ) : (\n                            selectedBook ? 'Update' : 'Create'\n                          )}\n                        </button>\n                        <button\n                          type=\"button\"\n                          onClick={() => setIsModalOpen(false)}\n                          className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 sm:mt-0 sm:w-auto sm:text-sm\"\n                        >\n                          Cancel\n                        </button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </Container>\n    </Layout>\n  );\n};\n","import React from 'react';\n\nexport interface PaginationProps {\n  currentPage: number;\n  totalPages: number;\n  onPageChange: (page: number) => void;\n  className?: string;\n}\n\n/**\n * Pagination component for navigating through pages of content\n */\nexport const Pagination: React.FC<PaginationProps> = ({\n  currentPage,\n  totalPages,\n  onPageChange,\n  className = '',\n}) => {\n  // Don't render pagination if there's only one page\n  if (totalPages <= 1) {\n    return null;\n  }\n\n  // Calculate page numbers to display\n  const getPageNumbers = (): number[] => {\n    const pages: number[] = [];\n    \n    // Always show first page\n    pages.push(1);\n    \n    // Calculate range around current page\n    const rangeStart = Math.max(2, currentPage - 1);\n    const rangeEnd = Math.min(totalPages - 1, currentPage + 1);\n    \n    // Add ellipsis after first page if needed\n    if (rangeStart > 2) {\n      pages.push(-1); // -1 represents ellipsis\n    }\n    \n    // Add pages in range\n    for (let i = rangeStart; i <= rangeEnd; i++) {\n      pages.push(i);\n    }\n    \n    // Add ellipsis before last page if needed\n    if (rangeEnd < totalPages - 1) {\n      pages.push(-2); // -2 represents ellipsis (different key from first ellipsis)\n    }\n    \n    // Always show last page if more than one page\n    if (totalPages > 1) {\n      pages.push(totalPages);\n    }\n    \n    return pages;\n  };\n\n  return (\n    <nav\n      className={`flex items-center justify-between border-t border-gray-200 px-4 sm:px-0 py-3 ${className}`}\n      aria-label=\"Pagination\"\n    >\n      <div className=\"hidden sm:block\">\n        <p className=\"text-sm text-gray-700\">\n          Showing page <span className=\"font-medium\">{currentPage}</span> of{' '}\n          <span className=\"font-medium\">{totalPages}</span>\n        </p>\n      </div>\n      <div className=\"flex flex-1 justify-between sm:justify-end\">\n        <button\n          onClick={() => onPageChange(currentPage - 1)}\n          disabled={currentPage === 1}\n          className=\"relative inline-flex items-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0 disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          Previous\n        </button>\n        <div className=\"hidden sm:flex sm:items-center\">\n          <div className=\"flex items-center space-x-1\">\n            {getPageNumbers().map((page, index) => {\n              // Render ellipsis\n              if (page < 0) {\n                return (\n                  <span\n                    key={page}\n                    className=\"relative inline-flex items-center px-4 py-2 text-sm font-semibold text-gray-700\"\n                  >\n                    ...\n                  </span>\n                );\n              }\n              \n              // Render page number\n              return (\n                <button\n                  key={page}\n                  onClick={() => onPageChange(page)}\n                  className={`relative inline-flex items-center px-4 py-2 text-sm font-semibold ${\n                    page === currentPage\n                      ? 'bg-primary-600 text-white focus:z-20 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary-600'\n                      : 'text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0'\n                  }`}\n                  aria-current={page === currentPage ? 'page' : undefined}\n                >\n                  {page}\n                </button>\n              );\n            })}\n          </div>\n        </div>\n        <button\n          onClick={() => onPageChange(currentPage + 1)}\n          disabled={currentPage === totalPages}\n          className=\"relative ml-3 inline-flex items-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0 disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          Next\n        </button>\n      </div>\n    </nav>\n  );\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n"],"names":["React","require","objectIs","Object","is","x","y","useState","useEffect","useLayoutEffect","useDebugValue","checkIfSnapshotChanged","inst","latestGetSnapshot","getSnapshot","value","nextValue","error","shim","window","document","createElement","subscribe","_useState","forceUpdate","exports","useSyncExternalStore","AdminBooksPage","isAdmin","useAuth","queryClient","useQueryClient","currentPage","setCurrentPage","isModalOpen","setIsModalOpen","selectedBook","setSelectedBook","formData","setFormData","title","author","isbn","description","publishedDate","coverImageUrl","genres","formError","setFormError","data","booksData","isLoading","useQuery","BookService","getBooks","keepPreviousData","staleTime","createBookMutation","useMutation","createBook","onSuccess","invalidateQueries","resetForm","onError","err","message","updateBookMutation","updateBook","id","deleteBookMutation","deleteBook","alert","handleInputChange","e","name","target","prev","_objectSpread","formatDate","dateString","Date","toISOString","split","_jsx","Layout","children","_jsxs","Container","className","type","onClick","handleAddBook","Spinner","size","Alert","books","length","scope","map","book","_book$averageRating","averageRating","toFixed","totalReviews","handleEditBook","handleDeleteBook","confirm","mutate","total","Pagination","totalPages","Math","ceil","onPageChange","page","onClose","onSubmit","preventDefault","trim","htmlFor","onChange","required","join","genre","rows","disabled","_Fragment","color","_ref","concat","getPageNumbers","pages","push","rangeStart","max","rangeEnd","min","i","index","undefined","module"],"sourceRoot":""}