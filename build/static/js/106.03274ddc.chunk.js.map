{"version":3,"file":"static/js/106.03274ddc.chunk.js","mappings":"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","sources":["pages/auth/forgot-password.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Layout } from '../../components/layout/layout.tsx';\nimport { Container } from '../../components/layout/container.tsx';\nimport { Alert } from '../../components/ui/alert.tsx';\nimport { Spinner } from '../../components/ui/spinner.tsx';\nimport { AuthService } from '../../services/auth-service.ts';\n\n/**\n * Forgot password page component\n */\nexport const ForgotPasswordPage: React.FC = () => {\n  const [email, setEmail] = useState<string>('');\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string>('');\n  const [success, setSuccess] = useState<boolean>(false);\n\n  // Handle input change\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    setEmail(e.target.value);\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e: React.FormEvent): Promise<void> => {\n    e.preventDefault();\n    setError('');\n    setSuccess(false);\n    setIsLoading(true);\n\n    try {\n      // In a real implementation, this would call the password reset endpoint\n      await AuthService.requestPasswordReset(email);\n      setSuccess(true);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to send password reset email. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Layout>\n      <Container maxWidth=\"sm\" className=\"mt-8\">\n        <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Reset your password</h2>\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\n            Or{' '}\n            <Link to=\"/login\" className=\"font-medium text-primary-600 hover:text-primary-500\">\n              sign in to your account\n            </Link>\n          </p>\n        </div>\n\n        <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n          <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n            {error && (\n              <Alert type=\"error\" className=\"mb-4\" onClose={() => setError('')}>\n                {error}\n              </Alert>\n            )}\n            \n            {success ? (\n              <Alert type=\"success\" className=\"mb-4\">\n                <p>\n                  If an account exists with the email <strong>{email}</strong>, we've sent password reset instructions.\n                </p>\n                <p className=\"mt-2\">\n                  Please check your email and follow the instructions to reset your password.\n                </p>\n              </Alert>\n            ) : (\n              <form className=\"space-y-6\" onSubmit={handleSubmit}>\n                <div>\n                  <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                    Email address\n                  </label>\n                  <div className=\"mt-1\">\n                    <input\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      autoComplete=\"email\"\n                      required\n                      value={email}\n                      onChange={handleChange}\n                      className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                      placeholder=\"you@example.com\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <button\n                    type=\"submit\"\n                    disabled={isLoading}\n                    className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    {isLoading ? <Spinner size=\"sm\" color=\"text-white\" className=\"mr-2\" /> : null}\n                    Send Reset Link\n                  </button>\n                </div>\n              </form>\n            )}\n\n            <div className=\"mt-6\">\n              <div className=\"relative\">\n                <div className=\"absolute inset-0 flex items-center\">\n                  <div className=\"w-full border-t border-gray-300\" />\n                </div>\n                <div className=\"relative flex justify-center text-sm\">\n                  <span className=\"px-2 bg-white text-gray-500\">Need help?</span>\n                </div>\n              </div>\n\n              <div className=\"mt-6 text-center\">\n                <Link to=\"/contact\" className=\"font-medium text-primary-600 hover:text-primary-500\">\n                  Contact Support\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Container>\n    </Layout>\n  );\n};\n"],"names":["ForgotPasswordPage","email","setEmail","useState","isLoading","setIsLoading","error","setError","success","setSuccess","_jsx","Layout","children","_jsxs","Container","maxWidth","className","Link","to","Alert","type","onClose","onSubmit","async","e","preventDefault","AuthService","requestPasswordReset","err","Error","message","htmlFor","id","name","autoComplete","required","value","onChange","target","placeholder","disabled","Spinner","size","color"],"sourceRoot":""}